.package {
	type 0 : integer
	session 1 : integer
}

.item {
    id 0 : string
    count 1 : integer
}

.characterbasic {
    name 1 : string
    avatar 2 : string
    avatartype 3 : integer
}

.charactersimple {
    id 0 : integer
    name 1 : string
    avatar 2 : string
    time 3 : integer
    recharge 4 : integer
    title 5:string
    allTitles 6:*string
    headInfo 7 : headInfo
    avatartype 8 : integer
}

.characterinfo {
    id 0 : integer
    name 1 : string
    avatar 2 : string
    recharge 3 : integer
    level 4 : integer
    # 工会id
    gid 5 : integer
    # 工会名
    gname 6 : string
    # 属性
    I 7 : integer
    F 8 : integer
    E 9 : integer
    S 10 : integer

    charm 11 : integer
    intimacy 12 : integer
    stageid 13 : integer

    beautyCount 14 : integer
    underlingCount 15 : integer
    vassalCount 16 : integer

    title 17:string
    allTitles 18:*string
    login 19:integer
    logout 20:integer
    headInfo 21 : headInfo
    flagInfo 22 : flagInfo
    avatartype 23 : integer
}

.mailStatus {
    id 0 : string
    status 1 : integer
}

.aptitude {
    id 0 : string
    level 1 : integer
}

.book {
    # I F E S
    type 0 : string
    count 1 : integer
}

.outfit {
    outfitid 0 : string
    count 1 : integer
}


.underling {
    id 0 : string
    # 等级
    level 1 : integer
    # 品质
    quality 2 : integer
    # 资质
    aptitudes 3 : *aptitude(id)
    # 吃书加成
    books 4 : *book(type)
    # 光环等级
    auralevel 5 : integer
    # pvp技能等级
    pvplevel 6 : integer
    # pvp技能当前经验
    pvpexp 7 : integer
    # 升级资质所用exp之前的q0
    q0 8 : integer
    # 属性总值
    total 9 : integer
    # 升级进度
    exp 10 : integer
    # 时装
    outfits 11 : *outfit(outfitid)
    # 当前时装
    curOutfit 12 : string
}

.miracle {
    id 0 : string
    # 是用过的次数
    count 1 : integer
	# 附带参数，办公同一个count有两个含义
	extraType 2 : integer
}

.vip {
    # vip 等级
    level 0 : integer
    # 神迹
    miracles 1 : *miracle(id)
}

# 办公-生产
.product {
    # 生产队里id，详见生产表第一列
    id 0 : string
    # 可生产次数
    times 1 : integer
    # 下一点生产次数恢复时间，终结时间。可以为空。
    recovery 2 : integer
}

# 办公-公务
.business {
    # 当前任务id
    id 0 : string
    # 奖励的物品 2选1
    reward 1 : item
    # 奖励的经验 2选1
    exp 2 : integer
    # 下一点生产次数恢复时间，终结时间
    recovery 3 : integer
    # 剩余次数，包括当前次
    times 4 : integer
}

.shopgift {
    id 0 : string
    # 结束时间
    finish 1 : integer
    # 代表活动uid，uid不同代表不是同一次内容
    uid 2 : string
    subtype 3:integer
}

.ushop {
    # EHeroEvents表
    cid 0 : string
    start 1 : integer
    finish 2 : integer
}

.shopgiftsales {
    id 0 : string
    count 1 : integer
    uid 2 : string
}

# 办公相关数据
.office {
    # 生产数据
    products 0 : *product(id)
    # 办公数据
    business 1 : business
}

.collect {
    id 0 : string
    collected 1 : boolean
}

.pveunderlingstatus {
    # 手下id
    id 0 : string
    # 是否出战过
    fight 1 : boolean
    # 是否吃过药
    drug 2 : boolean
}

.hostage {
    id 0 : string
    # 已拷问的次数
    times 1 : integer
    # cd时间
    cd 2 : integer
}

.rewardsInfo{
    rewards 0 : *item(id)
    extra 1 : item
	buffReward 2 : item
}

.bodybuilding {
    # 手下id
    id 0 : string
    # 健身结束时间
    finish 1 : string
    # 月卡格子标识
    extra 2 :integer
}

# 单人BOSS相关数据
.singleboss {
    # 记录战斗日期，如果与当前日期不符则会被重置
    date 0 : string
    # 当前正在攻击的BOSS
    id 1 : string
    # 当前BOSS血量
    hp 2 : integer
    # 手下是否出战状态
    underlingstatus 3 : *pveunderlingstatus(id)
    #历史boss奖励的列表
    bossReword 4 : *item
    #宝箱奖励，为0说明这次没有宝箱
    boxReword 5 : string
    #抢到宝箱的id
    chestArr 6 : *string
    #抢到宝箱的item
    chestItemArr 7 :*item
    #历史掉落宝箱的BossID列表
    ownerChests 8 : *string

}

# 多人BOSS
.coopboss {
    # 记录战斗日期，如果与当前日期不符则会被重置
    date 0 : string
    underlingstatus 1 : *pveunderlingstatus(id)
    # 当前BOSS血量
    hp 2 : integer
    # 是否已领奖
    hasGain 3 : boolean
    #当前Boss累积积分
    actScore 4 : integer
    level 5 : integer
}

.cannon {
    level 0 : integer
    exp 1 : integer
    # 本日使用次数
    times 2 : integer
}

# 关卡相关信息/单机小系统（人质、健身）
.pve {
    chapter 0 : integer
    level 1 : integer
    step 2 : integer
    hp 3 : integer
    # 章节奖励是否领取
    chaptercollects 4 : *collect(id)
    # 手下是否出战状态
    underlingstatus 5 : *pveunderlingstatus(id)
    # 保护费
    hostages 6 : *hostage(id)
    # 健身房解锁数量
    bbunlock 7 : integer
    bb 8 : *bodybuilding(id)
    #  单人BOSS相关
    singleboss 9 : singleboss
    # 多人BOSS相关
    coopboss 10 : coopboss
    # BOSS 商店状态，可能为空
    bossshop 11 : *item(id)
    # 加农炮
    cannon 12 : cannon
	# 本周悬赏派遣的列表
	reignQuestUnderlingList 13 : *string
	# 商店兑换情况
	reignQuestShopData 14 : *reignQuestShopData(shopID)
}

.dailytask {
    # 任务id
    id 0 : string
    # 进度
    count 1 : integer
    # 是否领取过
    picked 2 : boolean
}

.stats {
    # 物品使用统计，id为使用物品id，count为使用总数量
    itemuse 0 : *item(id)
    # 系统使用统计，id为Task表中taskType列的注释中使用的id tostring
    system 1 : *item(id)
    # 每日任务统计
    daily 2 : *dailytask(id)
    # 领取过的活跃奖励
    activities 3 : *string
    # 成就领取信息, count 为已领取等级 id 为Achievement表_id前半段
    achievements 4 : *item(id)
}

# 限时任务结构
.tlt {
    # 对应TLTGroup表_id
    id 0 : string
    # mask 值，表示某个级别奖励是否领取
    pick 1 : integer
    # 初始值, 该任务在初始时对应的数值
    init 2 : integer
    # 开始结束时间
    start 3 : integer
    finish 4 : integer
}

.tlr {
    # LimitRankType表_id
    typ 0 : string
    # 开始结束时间
    start 1 : integer
    # 结束时间
    finish 2 : integer
    # 领奖结束
    collect 3 : integer
    # 初始值, 该任务在初始时对应的数值
    init 4 : integer
    uid 5 : string
}

.tlrRemindInfo {
	# 自己当前的排名
	rank 0 : integer
	# 对比展示的排名
	aimRank 1 : integer
	# 和目标的分差
	scoreGap 2 : integer
	# 冲榜任务类型
	type 3 : string
}

.tasks {
    stats 0 : stats
    # 主线任务当前进度
    trunk 1 : string
    # 限时任务
    tlt 2 : *tlt(id)
    tlr 3 : *tlr(typ)
    cross 4: *crossInfo(configId)
	# 连休活动数据
	restDay 5: restDay
	# 月初活动
	monthEvent 6: monthEvent
    # 时装商店活动
    heroOutfitEvent 7 : heroOutfitEvent
	# 4星时装商店活动
    rareOutfitEvent 8 : rareOutfitEvent
	anniversaryEvent 9 : anniversaryEvent
	newOutfitEvent 10 : newOutfitEvent
}

.skill {
    id 0 : string
    # 等级
    level 1 : integer
    # 星数
    star 2 : integer
}

.wifeItem {
    wifeItemId 0 : string
    count 1 : integer
}

.beauty {
    id 0 : string
    # 好感，在未获得时这个值有意义
    like 1 : integer
    # 是否拥有
    own 2 : boolean
    # 亲密度
    intimacy 3 : integer
    # 魅力
    charm 4 : integer
    # 经验
    exp 5 : integer
    # 美女技能
    skills 6 : *skill(id)
    # 妃位，WifeLevel表id列
    position 7 : string
    # 才艺活动id
    activity 8 : integer
    # 时装
    outfits 9 : *outfit(outfitid)
    # 当前时装
    curOutfit 10 : string
    # 激活老婆道具次数
    wifeItem 11 : *wifeItem
	teamId 12 : string
    #遇见最大次数
    findCount 13 : integer
}

# 美女 + 出游
.beautysystem {
    # 下点出游体力恢复时间点
    fe 0 : integer
    # 下点出游幸运恢复时间点
    fl 1 : integer
    # 下点约会精力恢复时间点
    de 2 : integer
    # 美女
    beautys 3 : *beauty(id)
    # 免费幸运恢复次数
    freefl 4 : integer
}

# 合作方信息
.cooperation {
    id 0 : integer
    name 1 : string
    vassal 2 : vassal
    # 合作时间
    time 3 : integer
    #贸易地名称
    vassalName 4 : string
    #合作人用的道具
    useitem 5 : integer
	buffid 6 : string
}

# 全服贸易清单里的 合作方信息
.cooperationforlist {
    id 0 : integer
    name 1 : string
    vassal 2 : vassal
    # 合作时间
    time 3 : integer
    #贸易地名称
    vassalName 4 : string
    #合作人用的道具
    useitem 5 : integer
	title 6 : string
	level 7 : integer
	allTitles 8 : *string
	buffid 9 : string
}

# 附庸
.vassal {
    # 四种属性
    I 0 : integer
    F 1 : integer
    E 2 : integer
    S 3 : integer
    # 主要属性
    main 4 : string
    # 关联美女ID
    beauty 5 : string
    # 风险恢复时间点
    recovery 6 : integer
    id 7 : string
    # 当前经验
    exp 8 : integer
    # 当前等级
    level 9 : integer
    # 品质
    quality 10 : string
    # 暴露风险
    ce 11 : integer
    # 合作方
    cooperation 12 : cooperation
    # 全服匹配时可选的目标
    cancooperate 13 : *cooperation
    # 全服匹配推荐cd结束时间
    cd 14 : integer
    # 是否分配了地盘，如果已经分配值为“domain”
    location 15 : string
    # 合作时使用的物品0：免费，1：物品，2：钻石
    coopitem 16 : integer
    # 指定合作方id
    cooperationid 17 : integer
    #美女初始时品质
    beautyQuality 18 :integer
    #贸易地名称
    name 19:string
    #推荐刷新CD
    suggestCd 20:integer
    #创建时间
    createtime 21:integer
    # 指定合作方名字
    cooperationName 22 : string
    coopSuccItem 23 :integer
    extraBlock 24:integer
	isOwnTeam 25: boolean
	teamMembers 26 : *string
	teamLeader 27 : string
	rejectReason 28 : integer
	buffid 29 : string
}

# 附庸系统
.vassalsystem {
    # 已经解锁的数量
    unlock 0 : integer
    vassals 1 : *vassal(id)
    curPage 2 : integer
    totalPage 3 : integer
}

# 才艺活动
.activityunit {
    # 玩家id
    id 0 : integer
    beauty 1 : beauty
    # 开始时间
    time 2 : integer
    # 玩家昵称
    name 3 : string
    # 工会信息
    guild 4 : guildsimple
    # 活动中的位置 1 -- X
    position 5 : integer
}

# 才艺活动
.beautyactivity {
    id 0 : string
    creator 1 : integer
    # 保护完结时间，如果比当前时间大说明还是处于保护状态中
    protect 2 : integer
    # 对应的配置
    cid 3 : string
    # 完结时间
    finish 4 : integer
    # 活动中的美女
    units 5 : *activityunit
    # 踢掉的人
    kicked 6 : *item(id)
}


.areanaunderling {
    # 手下id
    id 0 : string
    # 属性总值
    hpbase 1 : integer
    # 当前hp，为0说明死了
    hp 2 : integer
    # 基础攻击力
    atkbase 3 : integer
    # 攻击力
    atk 4 : integer
    # 等级
    level 5 : integer
    # pvp 技能等级
    pvplevel 6 : integer
    # 技能强化百分比
    strengthen 7 : integer
    # 品质
    quality 8 : integer
    # atk buff增加值
    atkbuff 9 : integer
    # 当前时装
    curOutfit 10 : string
}

# 竞技场对手信息
.areanacharacter {
    id 0 : integer
    name 1 : string
    avatar 2 : string
    underlings 3 : *areanaunderling(id)
    # 敌方出战的手下
    selecteds 4 : *string
    score 5 : integer
    level 6 : integer
    guild 7 : string
    # 使用的称号
	title 8:string
	# 拥有的所有称号
    allTitles 9:*string
    headInfo 10 : headInfo
    avatartype 11 : integer
}

.areanarevengecharacter {
    id 0 : integer
    name 1 : string
    avatar 2 : string
    underlingcount 3 : integer
    # 总战力
    total 4 : integer
    # 排名
    rank 5 : integer
    # 等级
    level 6 : integer
    # 分数
    score 7 : integer
    avatartype 8 : integer
}

.chaseinfo {
    id 0 : integer
    count 1 : integer
}

.buffcount {
	id 0 : string
    count 1 : integer
}

.areana {
    # 对方数据
    target 0 : areanacharacter
    # 我的数据，只有手下数据
    mine 1 : areanaunderling
    # 当前分数
    score 2 : integer
    # 战斗类型、免费次数匹配 : 1、 出战令匹配 : 2、挑战AC : 3、复仇AC : 4、追杀AH : 5、无任何战斗 : 0
    type 3 : integer
    # 免费竞技场次数
    freeareana 4 : integer
    # 出战令
    underlingareana 5 : integer
    # 免费次数cd
    areanacd 6 : integer
    # 加成 当本值不为空时说明处于选择加成阶段,id 为表中的id， count为加成百分比
    buffs 7 : *item
    # 使用过的手下id，在复仇、追杀等可以指定手下的地方会被记录
    usedunderlings 8 : *string
    # 使用过的手下id，在普通匹配、出战令可以指定手下的地方会被记录
    matchedunderlings 9 : *string
    # 上次挑战过的玩家
    last 10 : charactersimple
    # 已经选择的BUFF
    selectedbuff 11 : integer
    # 本次随机出的所有武将
    mineList 12 : *areanaunderling
    # 每日免费指定出战次数
    arenaFreeAssignDaily 13 : integer
    # 竞技场三胜奖励
    arenaBonusBoxRecore 14 : *item
    # 大臣指定Flag
    manualSelect 15:boolean
    #tlt 积分
    tltScore 16:integer
    #追捕次数
    chasetime 17 : *chaseinfo(id)
	buffCount 18 : *buffcount(id)
	reignbuff 19 : reignbuffinfo
}

.reignbuffinfo {
	buffid 0 : string
	buffcount 1 : integer
}

.pvp {
    areana 0 : areana
}


.arenamessage {
    # 玩家id
    id 0 : integer
    # 玩家名称
    name 1 : string
    # 头像
    avatar 2 : string
    # 击杀数量
    beatcount 3 : integer
    # 对手名字
    enemyname 4 : string
    # 连胜次数
    straight 5 : integer
    # 使用手下
    underling 6 : string
    time 7 : integer
    # 是否全歼
    allbeat 8 : boolean
	# 使用的称号
	title 9:string
	# 拥有的所有称号
    allTitles 10:*string
    avatartype 11 : integer
}

# 跨服竞技场手下数据
.crossarenaunderling {
    # 手下id
    id 0 : string
    # 属性总值
    hpbase 1 : integer
    # 当前hp，为0说明死了
    hp 2 : integer
    # 基础攻击力
    atkbase 3 : integer
    # 攻击力
    atk 4 : integer
    # 等级
    level 5 : integer
    # pvp 技能等级
    pvplevel 6 : integer
    # 技能强化百分比
    strengthen 7 : integer
    # 品质
    quality 8 : integer
    # atk buff增加值
    atkbuff 9 : integer
    # 当前时装
    curOutfit 10 : string
}

# 跨服竞技场对手信息
.crossarenacharacter {
    id 0 : integer
    name 1 : string
    avatar 2 : string
    underlings 3 : *crossarenaunderling(id)
    # 敌方出战的手下
    selecteds 4 : *string
    score 5 : integer
    level 6 : integer
    guild 7 : string
    # 使用的称号
	title 8:string
	# 拥有的所有称号
    allTitles 9:*string
    headInfo 10 : headInfo
    avatartype 11 : integer
}

.crossarenarevengecharacter {
    id 0 : integer
    name 1 : string
    avatar 2 : string
    underlingcount 3 : integer
    # 总战力
    total 4 : integer
    # 排名
    rank 5 : integer
    # 等级
    level 6 : integer
    # 分数
    score 7 : integer
    avatartype 8 : integer
}

.crossarena {
    # 对方数据
    target 0 : crossarenacharacter
    # 我的数据，只有手下数据
    mine 1 : crossarenaunderling
    # 当前分数
    score 2 : integer
    # 战斗类型、免费次数匹配 : 1、 出战令匹配 : 2、挑战AC : 3、复仇AC : 4、追杀AH : 5、无任何战斗 : 0
    type 3 : integer
    # 免费竞技场次数
    freearena 4 : integer
    # 出战令
    underlingarena 5 : integer
    # 免费次数cd
    arenacd 6 : integer
    # 加成 当本值不为空时说明处于选择加成阶段,id 为表中的id， count为加成百分比
    buffs 7 : *item
    # 使用过的手下id，在复仇、追杀等可以指定手下的地方会被记录
    usedunderlings 8 : *string
    # 使用过的手下id，在普通匹配、出战令可以指定手下的地方会被记录
    matchedunderlings 9 : *string
    # 上次挑战过的玩家
    last 10 : charactersimple
    # 已经选择的BUFF
    selectedbuff 11 : integer
    # 本次随机出的所有武将
    mineList 12 : *crossarenaunderling
    # 每日免费指定出战次数
    arenaFreeAssignDaily 13 : integer
    # 竞技场三胜奖励
    arenaBonusBoxRecore 14 : *item
    # 大臣指定Flag
    manualSelect 15:boolean
    #tlt 积分
    tltScore 16:integer
    #追捕次数
    chasetime 17 : *chaseinfo(id)
	buffCount 18 : *buffcount(id)
	reignbuff 19 : reignbuffinfo
}

.crossarenagame {
    configId 0 : string

    start 1:integer
    finish 2:integer
    #活动uid
    uid 3:string
    arena 4: crossarena
}


.sevenday {
    # 当天是否登录
    logined 0 : boolean
    # 是否领取普通奖励
    normal 1 : boolean
    # 是否领取特殊奖励
    special 2 : boolean
}

.recentlyChat {
    id 0 :string
    #最后聊天时间
    time 1:integer
    # 未读消息条数
    unread 2 :integer
}

.cardWeekReward{
    #"monthcard", "acecard"
    id 0:string
    #next gain time
    time 1:integer
    #gain count
    count 2:integer
}
.headInfo{
    #头像类型
    type 0 : integer 
    #头像id
    picture 1 : string
    #框id
    frame 2 : string 
}

.headData{
    headId 0: string
}

.frameData{
    frameId 0: string
}

.headList{
    # 0-默认、1-称号、2-大臣、3-老婆、4-大臣时装、5-老婆时装
    type 0 :integer
    headInfo 1 : *headData
}

.global {
    # 7日登录奖励
    sevendays 0 : *sevenday
    # 限时礼包，销售记录, 可能为空
    shopgiftsales 1 : *shopgiftsales(id)
    # 单品销售记录, 可能为空
    itemsales 2 : *item(id)
    # 金条销售记录, 可能为空
    goldsales 3 : *item(id)
    # 是否开启工会功能
    guild 4 : boolean
    # 夜店已参与次数
    partyjoin 5 : integer
    # 夜店分数（不是用来买东西的，那个是物品）
    partyscore 6 : integer
    # vip奖励领取状态，bit mask数,可能为空
    vipreward 7 : integer
    # 是否领取长期签到
    longtermsign 8 : boolean
    # 累计长签，一直向上增长不会充值，取余计算，可为空
    acclongterm 9 : integer
    # 月卡 & 1、至尊月卡 & 2、年卡&4 领取状态
    cardpick 10 : integer
    # 普通月卡到期时间，可为空
    monthcard 11 : integer
    # 至尊月卡到期时间，可为空
    acecard 12 : integer
    # 年卡月卡到期时间，可为空
    yearcard 13 : integer
    # 致敬mask value
    rankvisit 15 : integer
    # 工会物品购买状况
    guildbuy 16 : *item(id)
    # 收取陌生人消息
    strangerflag 17: integer
    recentlyChat 18: *recentlyChat(id)
    serverMail 19: *mailStatus(id)
    cardWeekRewards 20:*cardWeekReward(id)
    title 21:string
	recentlyReadChat 22: *recentlyChat(id)
    crossOpen 23 : integer
    headInfo 24: headInfo
    versionlist 25 : *string
    reignOpen 26 : integer
    reignSingleOpen 27 : integer
    timeoutTitleReward 28 : boolean
    perfumeInfo 29 : perfumeInfo 
    normalgiftsales 30 : *shopgiftsales(id)
    useBubbleID 31 : string
}


.mg1police {
    # 唯一id
    uid 0 : string
    # 配置中的id
    cid 1 : string
}

.mg1 {
    bullet 0 : integer
    # 子弹恢复时间，逻辑与生产恢复一致
    recovery 1 : integer
    feverStartTime 2 : integer
    # 加子弹道具, count为已购买数量
    shop 3 : *item(id)
    # 得分
    score 4 : integer
    # 积分
    credit 5 : integer
    # 统计，警察id，击杀数量
    stat 6 : *item(id)
    # 成就领取信息, count 为已领取等级
    achievements 7 : *item(id)
    # 积分商店
    creditshop 8 : *item(id)
    # 开始结束
    start 9 : integer
    finish 10 : integer
    rewardTime 11 : integer 
}

.mg2 {
    # 加道具, count为已购买数量
    shop 0 : *item(id)
    # 得分
    score 1 : integer
    # 积分
    credit 2 : integer
    # 成就领取信息, count 为已领取等级
    achievements 3 : *item(id)
    # 积分商店
    creditshop 4 : *item(id)
    # 开始结束
    start 5 : integer
    finish 6 : integer
    #免费召唤
    dailySummon 7 : integer
    #免费修改
	dailyModify 8 : integer
    #额外召唤
	extrSummon 9 : integer
    #额外修改
	extrModify 10 : integer
    #当前召唤结果
	curSummonResult 11 : *integer
    #当日钻石修改次数
	goldChangeCount 12 : integer
    #成就
    stat 13 : *item(id)
    rewardTime 14 : integer 
}


.mg3 {
    # 加道具, count为已购买数量
    shop 0 : *item(id)
    # 得分
    score 1 : integer
    # 积分
    credit 2 : integer
    # 成就领取信息, count 为已领取等级
    achievements 3 : *item(id)
    # 积分商店
    creditshop 4 : *item(id)
    # 开始结束
    start 5 : integer
    finish 6 : integer
    # 桌子等级
    tablelevel 7 : integer
    # 统计
    stat 8 : *item(id)
	rewardTime 9 : integer 
}

.mg5 {
    # 加道具, count为已购买数量
    shop 0 : *item(id)
    # 得分
    score 1 : integer
    # 积分
    credit 2 : integer
    # 成就领取信息, count 为已领取等级
    achievements 3 : *item(id)
    # 积分商店
    creditshop 4 : *item(id)
    # 开始结束
    start 5 : integer
    finish 6 : integer
    # 桌子等级
    tablelevel 7 : integer
    # 统计
    stat 8 : *item(id)
	rewardTime 9 : integer 
}

.mg6 {
    # 加道具, count为已购买数量
    shop 0 : *item(id)
    # 得分
    score 1 : integer
    # 积分
    credit 2 : integer
    # 成就领取信息, count 为已领取等级
    achievements 3 : *item(id)
    # 积分商店
    creditshop 4 : *item(id)
    # 开始结束
    start 5 : integer
    finish 6 : integer
    # 桌子等级
    tablelevel 7 : integer
    # 统计
    stat 8 : *item(id)
	rewardTime 9 : integer 
}

.mg7 {
    # 加道具, count为已购买数量
    shop 0 : *item(id)
    # 得分
    score 1 : integer
    # 积分
    credit 2 : integer
    # 成就领取信息, count 为已领取等级
    achievements 3 : *item(id)
    # 积分商店
    creditshop 4 : *item(id)
    # 开始结束
    start 5 : integer
    finish 6 : integer
    # 桌子等级
    tablelevel 7 : integer
    # 统计
    stat 8 : *item(id)
	rewardTime 9 : integer 
}


.minigame {
    mg1 0 : mg1
    mg2 1 : mg2
    mg3 2 : mg3
    mg4 3 : mg3
    mg5 4 : mg5
	mg6 5 : mg6
    mg7 6 : mg5
}

.navigation {
    stamina 0:integer
    # 开始结束
    start 1 : integer
    finish 2 : integer
    # 统计
    stat 3 : *item(id)
    uid 4:string
}

.mausoleum {
    stamina 0:integer
    # 开始结束
    start 1 : integer
    finish 2 : integer
    uid 3:string
    templateId 4 : string
    #资源商店次数
    shop 5 : *item(id) 
    #积分商店次数
    scoreShop 6 : *item(id) 
    #血量倍数
    multi 7 : integer
}

.gachataskinfo {
    id 0 : string
    count 1 : integer
    isGet 2 : boolean
}

.gachastoryinfo {
    id 0 : string
    getTime 1 : integer
    isGet 2 : boolean
}

.gacharecordinfo {
		rewards 0 : *item(id)
		currank 1 : integer
		totalrank 2 : integer
		recordid 3 : string
		areaid 4 : integer
		nMarkingValue 5 : integer
}

.gacharankinfo {
    rank 0 : integer
    user 1 : rankcharacter
    recordInfo 2 : gacharecordinfo
}

.gachachatinfo {
	recordid 0 : string
	count 1 : integer
	areaid 2 : integer
}

.gachaevent {
    nAcitityScore 0 : integer
    nShopId 1 : integer
    tExtraShopList 2 : *item(id)
    tSpecialGift 3 : *item(id)
    tDailySpecialGift 4 : *item(id)
    tTaskInfo 5 : *gachataskinfo(id)
    tScoreList 6 : *string
    tStoryReward 7 : *gachastoryinfo(id)
}

.gachaeventinfo {
    templateId  0 : string
	actId 1 :string
    uid 2 :string
	start 3 : integer
	finish 4 : integer
	rewardTime 5 : integer
	shopTmpId 6 : string
    gachaevent 7 : gachaevent
    nextStart 8 : integer
    nextFinish 9 : integer
    oneActivityName 10 : string
    twoActivityName 11 : string
    serverIds 12 : *string
}


.luckybagTaskinfo {
    id 0 : string
    count 1 : integer
    isGet 2 : boolean
}

.luckybagInfo {
    typ 0 : string
    uid 1 : string
    finish 2 : integer
    start 3 : integer
    templateId 4 : string
    taskList 5 : *luckybagTaskinfo(id)
    itemList 6 : *item(id)
    tGiftList 7 : *item(id)
}

.rankbonusTaskinfo {
    id 0 : string
    count 1 : integer
    isGet 2 : boolean
}

.rankbonusInfo {
	typ 0 : string
	uid 1 : string
	finish 2 : integer
	start 3 : integer
	taskList 4 : *rankbonusTaskinfo(id)
	goldShop 5 : *item(id)
	exchange 6 : *item(id)
	currentDay 7 : integer
}

.teamgame {
    navigation 0 :navigation
    mausoleum 1 : mausoleum
}

.crossgame {
    crossarena 0 : crossarenagame
    mausoleum 1 : mausoleum
    gachaevent 2 : gachaeventinfo
}

.character {
    id 0 : integer
    name 1 : string
    avatar 2 : string
    level 4 : integer
    beauty 5 : beautysystem
    office 6 : office
    #vassal 7 : vassalsystem
    # 充值金额，分
    recharge 9 : integer
    # 手下
    underlings 10 : *underling(id)
    # 背包
    items 11 : *item(id)
    # 关卡信息
    pve 12 : pve
    tasks 13 : tasks
    # 总属性
    I 14 : integer
    F 15 : integer
    E 16 : integer
    S 17 : integer
    global 18 : global
    pvp 19 : pvp
    SB 20 : integer
    guide 21 : string
    minigame 22 : minigame
    teamgame 23 : teamgame
	patrolTeamList 24 : *integer
    crossgame 25:crossgame
    create 26 : integer
    avatartype 27 : integer
	intimacy 28 : integer
}

.activitystatus {
    # 限时商店信息，销售信息在office中
    shopgifts 0 : *shopgift(id)
    # 单人BOSS系统是否开启
    singleboss 1 : boolean
    singlebossstart 2 : integer
    singlebossend 3 : integer
    # 多人BOSS系统是否开启, 1 未开启，2正在开启，3已结束（BOSS被弄死了）
    coopboss 4 : integer
    coopbossstart 5 : integer
    coopbossend 6 : integer
    # 卖手下活动
    ushop 7 : *ushop(cid)
}

.mail {
    id 0 : string
    type 1 : string
    content 2 : string
    time 3 : integer
	expire 4 : integer
}

.areanamessage {
    # 玩家id
    id 0 : integer
    # 玩家名称
    name 1 : string
    # 称号
    avatar 2 : string
    # 击杀数量
    beatcount 3 : integer
    # 对手名字
    enemyname 4 : string
    # 连胜次数
    straight 5 : integer
    # 使用手下
    underling 6 : string
    time 7 : integer
    # 是否全歼
    allbeat 8 : boolean
	# 使用的称号
	title 9:string
	# 拥有的所有称号
    allTitles 10:*string
    #头像信息
    headInfo 11 : headInfo
    #充值数据
    recharge 12 : integer
    avatartype 13 : integer
}

.guildMemberUnderlingInfo {
    underlingId 0 :string
    fight 1 :boolean
    drug 2 :boolean
}

.guildMemberBossInfo {
    underlings 0 : *guildMemberUnderlingInfo(underlingId)
}

.guildMemberActInfo {
    guildboss 0 : guildMemberBossInfo
}

.guildcharacter {
    # 玩家id
	id 0 : integer
    # 玩家名字
	name 1 : string
	level 2 : integer
	avatar 3 : string
	recharge 4 : integer
    # 总战力
	total 5 : integer
    # 历史贡献
    contribute 6 : integer
    # 上次登录时间
    logintime 8 : integer
    ccoin 9 : integer
    cd 10 : integer
    authority 11 : integer
    # 工会任务领取mask
    taskpick 12 : integer
    # 建设类型
    gbuild 13 : string
    #发送全局广播次数
    broadcast 14 : integer
    # 使用的称号
	title 15:string
	# 拥有的所有称号
    allTitles 16:*string
	# 上次下线时间
    logouttime 17 : integer
    actInfo 18 : guildMemberActInfo
    headInfo 19 : headInfo
    avatartype 20 : integer
}

.guildrequest {
    # 玩家id
    cid 0 : integer
    name 1 : string
    level 2 : integer
    avatar 3 : string
    recharge 4 : integer
    # 战力
    total 5 : integer
    # 上次登录时间
    logintime 6 : integer
    # 申请时间
    time 7 : integer
    # 使用的称号
	title 8:string
	# 拥有的所有称号
    allTitles 9:*string
    # 上次登出时间
    logouttime 10 : integer
    headInfo 11 : headInfo
    avatartype 12 : integer
}

.receiveUserData{
	userID 0: string
	userName 1: string
	receiveTime 2: integer
}

.guildGiftData{
	buyUserID 0 : string
	buyUserName 1 : string
	buyTime 2 : integer
	receiveUserData 3 : *receiveUserData(userID)
}

.guildGiftInfo{
	giftID 0 : string
	# 1就是公会礼包，buyUserID的map只有一个,0就是非公会礼包，有多人购买
	isGuildGift 1 : integer
	guildGiftData 2: *guildGiftData(buyUserID)
}

.sendGiftData{
	buyUserID 0 : string
	buyUserName 1 : string
	buyTime 2 : integer
	# 广播同步的时候 isReceived都是0，客户端主动发起请求，带了玩家ID过来，0就是没领取,1就是领取了
	isReceived 3 : integer
	# 该礼包目前领取的人数
	receiveUserNum 4 : integer
}

.sendGiftInfo{
	giftID 0 : string
	# 1就是公会礼包，buyUserID的map只有一个,0就是非公会礼包，有多人购买
	isGuildGift 1 : integer
	guildGiftData 2: *sendGiftData(buyUserID)
}

.guild {
    id 0 : integer
    name 1 : string
    flag 2 : string
    facebook 3 : string
    declaration 4 : string
    notice 5 : string
    # 1 开放随机加入 0 不开放
    publictype 6 : integer
    exp 7 : integer
    level 8 : integer
    # 财富
    fortune 9 : integer
    # 总战力
	total 10 : integer
    # 成员
    members 11 : *guildcharacter
    rank 13 : integer
    # 完成的任务量
    task 14 : integer
    # 全局任务id
    G_TASK 15 : string
    #密码
    password 16 : string
    #公告修改次数
    modifycount 17:integer
    # 成员数量 (需要成员人数,不要具体成员数据时用,如防止查询公会基础信息会员信息过多)
    membersCount 18:integer
    #会长名字
    leaderName 19: string
	#公会每日建造总次数
	gbuildcount 20: integer
}

.guildsimple {
    id 0 : integer
    name 1 : string
    flag 2 : string
    level 3 : integer
}

.guildBossRecord {
    id 0:integer
    underling 1 :string
    atk 2:integer
    atkTime 3 :integer
}


.guildBossInfo {
    confId 0 :string
    curState 1 :integer
    bossHp 2:integer
    bossTotalHp 3 :integer
    #每人的每个武将攻击记录list
    recordList 4: *guildBossRecord
    #参加过的帮派成员map
    joiners 5:*rankcharacter
    #全部获得的帮派Exp
    totalGuildExp 6 : integer
    #boss开启时间
    startTime 7:integer
    #击退时间
    finishTime 8:integer
}


.memberBossReward {
    atk 0 : integer
    ccoin 1 :integer
    memberId 2:integer
    confId 3: string
    activityCoin 4 : integer
    activityCoinItem 5 : string
}

.friend {
    id 0 : integer
    name 1 : string
    avatar 2 : string
    # 国力
    total 3 : integer
    # 充值点数
    recharge 4 : integer
    # 关系 0:请求为好友，1:好友 2:拒绝，3:黑名单 4:互为黑名单
    status 5 : integer
    # 上次登录时间为0在线
    login 6 : integer
    # 状态发起者？
    actionuser 7 : integer
    # 工会名称
    gname 8 : string
    title 9:string
    allTitles 10:*string
    # 上次登出时间
    logout 11 : integer
    headInfo 12 :headInfo
    avatartype 13 : integer
}

.rankcharacter {
    id 0 : integer
    name 1 : string
    avatar 2 : string
    score 3 : integer
    recharge 4 : integer
    level 5 : integer
    guild 6: string
    F 7:integer
    title 8:string
    allTitles 9:*string
    rank 10: integer
    headInfo 11 :headInfo
    titleCount 12 : integer
    avatartype 13 : integer
}

# 三种不同奖励的配置
.atextra {
    a 0 : string
    b 1 : string
    c 2 : string
}

.atvalue {
    value 0 : integer
    pick 1 : integer
    isMoney 2 : boolean
}

# 充值信息
.atcontext {
    a 0 : atvalue
    b 1 : atvalue
    c 2 : atvalue
}

.chatmessage {
    # 发送者
    sender 0 : integer
    # 内容类型，1 文字 2 表情 3 分享手下 4 分享附属 5 分享情人，2--5为id
    typ 1 : integer
    content 2 : string
    time 3 : integer
    # 宝箱内容
    chestbox 4:chestBox
    #messageId
    id 5:integer
	crossChannelName 6 : string
	# 发送者气泡框ID
    useBubbleID 7 : string
    gachachatinfo 8 : gachachatinfo
}

.chestBox {
    boxId 0 : string
    ownerId 1 : integer
    openInfos 2 : *boxRewardInfo
}

.boxRewardInfo {
    name 0 : string
    index 1 : integer
}

.navigationTeamMember {
    id 0:integer
    name 1: string
    score 2:integer
    attack 3:integer
    recharge 4:integer
    avatar 5:string
    title 6:string
    allTitles 7:*string
    headInfo 8: headInfo
	guildID 9: integer
    avatartype 10 : integer
}


.navigationRequestChar {
    id 0 : integer
    name 1 : string
    avatar 2 : string
    score 3 : integer
    recharge 4 : integer
    level 5 : integer
    guild 6: string
    F 7:integer
    requestTime 8:integer
    title 9:string
    allTitles 10:*string
    headInfo 11 : headInfo
    avatartype 12 : integer
}


.navigationTeam {
    id 0 : integer
    teamName 1:string
    needAttack 2: integer
    acceptType 3:integer
    leaderName 4:string
    totalAttack 5:integer
    teamDesc 6:string
    members 7:*navigationTeamMember
    totalScore 8:integer
    dailyEnterCount 9:integer
    requestList 10:*navigationRequestChar
    curArea 11:string
    dailyKickCount 12:integer
    
}

.navigationRecord{
    recordTime 0:integer
    #item, boat, score, box
    eventType 1: string
    configId 2:string
    addScore 3:integer
    items 4: *item
    name 5:string
    fighter 6:string
    curAttack 7:integer
    curHp 8:integer
}


.navigationEvent {
    ownerId 0 : integer
    #item boat score box boxgain
    eventType 1 :string
    configId 2:string
    leftHp 3:integer
    totalHp 4: integer
    cdTime 5:integer
    uuid 6:integer
    ownerName 7 :string
}

.navigationInfo {
    curArea 0:string
    stamina 1:integer
    joinHeros 2: *string
    #event为空说明可以探索
    curEvent 3:navigationEvent
    teamEvent 4:*navigationEvent
    staminaCD 5:integer
    totalAttack 6:integer
    totalScore 7:integer
    #成就
    stat 8 : *item(id)
    # 成就领取信息, count 为已领取等级
    achievements 9 : *item(id)
    # 加道具, count为已购买数量
    shop 10 : *item(id)
    start 11 : integer
    finish 12 : integer
    serverDay 13 : integer
    rewardTime 14 : integer
}


.addPro {
    proType 0 :string
    value 1 :integer
}


.crossInfo {
    configId 0 : string
    serverIds 1 : *string
    start 2:integer
    finish 3:integer
    #活动uid
    uid 4:string
    ticket 5:string
    areaId 6 : string
}

.exchangeInfo {
    typ 0 : string
    start 1 : string
    finish 2 :string
    uid 3 :string
}

.wifeAdInfo {
    typ 0 : string
    start 1 : string
    finish 2 :string
    uid 3 :string
}

.exchangeRecord {
    outfitItemId 0 : string
    count 1 : integer
}

.exchangeRecordInfo {
    typ 0 : string
    info 1 : *exchangeRecord
}




#玩家攻击boss的武将信息
.bossUnderlingInfo {
    underlingId 0 :string
    fight 1 :boolean
    drug 2 :boolean
}

#玩家攻击boss的日志，列表显示在gridInfo里
.mausoleumGridRecord {
    id 0:integer
    underling 1 :string
    atk 2:integer
    atkTime 3 :integer
}

.mausoleumRecord{
    playerName 0:string
    #boss, box
    gridType 1: string
    configId 2:string
    rewards 3: *item
    
}

#玩家的皇陵信息
.mausoleumPlayerInfo {
    #武将出战信息
    underlings 0 : *bossUnderlingInfo(underlingId)
    #体力上次回复时间，为空大概率表示满体力
    recoverTime 1 : integer
    totalScore 2 : integer
    #资源商店次数
    shop 3 : *item(id) 
    #积分商店次数
    scoreShop 4 : *item(id) 
    start 5 : integer
    finish 6 : integer
    tempId 7 :string
    #如果为空默认为0
    multi 8 : integer
}


#双倍活动数据
.doubleRechargeInfo {
    start 0 : integer
    finish 1 : integer
    #倍率
    tempId 2 :string
    #已冲id列表
    getList 3 : *string
}


#皇陵内容信息，在某些情况下，会没有gridRecord和bossLeftHp字段
#一个内容里包括多个tileId
.gridInfo{
    id 0 : integer
    #当前状态0：关闭，1：打开，2：结束
    curState 1 : integer
    #内容占用的格子
    useTile 2 : *integer
    #格子类型，boss，box，empty
    gridType 3 : string
    #格子内容id
    configId 4 : string
    #boss剩余血量
    bossLeftHp 5 : integer
    #格子操作日志
    gridRecord 6 : *mausoleumGridRecord
}
.restDay {
	#活动uid
	uid 0:string
	#活动开始时间
    start 1:integer
	#活动结束时间
	finish 2:integer
	#活动期间登录天数
	loginDay 3:integer
	#持续时间
	continuedDays 4:integer
	#领取天数
	pickDayList 5:*integer
	isAddToday 6: integer
	typ 7: string
}

.dayTaskList {
	# 月初骗钱每日任务类型
	taskType 0: integer
	# 当前完成数量
	count 1: integer
}

.scoreShop {
	# MonthEventShop 的 id
	id 0: integer
	# 兑换的次数
	count 1: integer
}

.monthEvent {
	# 活动uid
	uid 0:string
	# 活动开始时间
    start 1:integer
	# 活动结束时间
	finish 2:integer
	# 活动类型
	typ 3:string
	# 每日任务列表
	dayTaskList 4:*dayTaskList(taskType)
	# 积分
	score 5:integer
	# 领奖列表 	按照MonthEventTask的ID
	rewardList 6: *integer
	# 领奖结束时间
	rewardTime 7: integer
	# 积分商店数据
	scoreShop 8: *scoreShop(id)
}

.troopsCostInfo {
    nId 0 :integer          #活动id 
    nStageId 1 :string      #关卡id
    nEnemyHp 2 :integer     #敌人血量
    start    3 :integer     #活动开始时间戳
    finish   4 :integer     #活动结束时间戳
    tStageReward 5 : *string #阶段奖励领取列表
    nOpenMapTime 6 : integer #开启藏宝图奖励次数
    nOpenBoxTiem 7 : integer #开启宝箱次数
    histroyMaxId 8 : string  #历史最大通关id
}

.costInfo {
    nStageId  0 :string #关卡id
    totalCost 1 : integer  #总消耗
}

.troopsMapRewardInfo {
    nIndex 0 : integer #格子编号索引
    itemInfo 1 : item
    nCharacterId 2 : integer #挖藏宝图玩家id
    sName 3 : string  #玩家名字
}

.troopsBoxRewardInfo {
    nId 0 : string
    nType 1 : string
    nStageId 2 : string #关卡id
    bOpen 3 : boolean  
}

.troopscostmapInfo {
    nId 0 : string #藏宝图id
    nCharacterId 1 : integer #发现玩家id
    nType 2 : string #藏宝图类型
    sName 3 : string #发现玩家名字
    tRewardList 4 : *troopsMapRewardInfo #藏宝图奖励列表
    tBoxList 5 : *troopsBoxRewardInfo #宝箱激活列表
    nOpenTime 6 :  integer   #该藏宝图挖宝次数
    nStageId 7 : string #关卡id
    nCreateTime 8 :  integer   #藏宝图创建时间
}

.taskList {
	# 时装活动任务类型
	taskType 0: integer
	# 当天完成数量
	curDayCount 1: integer
    # 当天完成数量
	totalCount 2: integer
}

.heroOutfitInfo {
    # HeroOutfitEventExchange 的 id
	id 0: integer
	# 兑换的次数
	count 1: integer
}

.heroOutfitEvent {
	# 活动uid
	uid 0:string
	# 活动开始时间
    start 1:integer
	# 活动结束时间
	finish 2:integer
	# 活动类型
	typ 3:string
	# 每日任务列表
	taskList 4:*taskList(taskType)
	# 领奖列表 	按照HeroOutfitEventTask的ID
	rewardList 6: *integer
	# 兑换列表
	exchangeList 7: *heroOutfitInfo(id)
}

.singleHeroEventData{
	# 五虎将,四元帅等活动uid (H1,H2)
	uid 0:string
	# 开放的武将heroid
	heroid 1:string
}

.rareOutfitInfo {
    # RareOutfitEventExchange 的 id
	id 0: integer
	# 兑换的次数
	count 1: integer
}

.rareOutfitEvent {
	# 活动uid
	uid 0:string
	# 活动开始时间
    start 1:integer
	# 活动结束时间
	finish 2:integer
	# 活动类型
	typ 3:string
	# 每日任务列表
	taskList 4:*taskList(taskType)
	# 领奖列表 	按照RareOutfitEventTask的ID
	rewardList 6: *integer
	# 兑换列表
	exchangeList 7: *rareOutfitInfo(id)
}

# type  政务 -- "builder" 经商--"merchant" 
.statuslist {
    id 0 : string
    type 1 : string
}

.reignlicenseinfo {
    builder 0: *statuslist
    merchant 1: *statuslist
}

.reignBaseData {
    leaderid 0 : integer
    step 1 : integer
    status 2 : integer
    start 3 : integer
    finish 4 : integer
    eventid 6: string
    eventtime 7 :integer
    buffid 8 : string
    reignid 9 : string
    infolist 10 : *string
    licenseinfo 11 : reignlicenseinfo
    buffstate 12 : integer
}

.recordInfo {
    characterid 0 : integer
    activevalue 1 : integer
    time     2 : integer
    reignid 3 : string
    title 4:string
    name 5 : string
    license 6 : string
}

.flagInfo {
    flag 0 : string
    emblem 1 : *string
}

.reignInfo {
    baseInfo 0 : *reignBaseData
    rewardList 1 : *string
    flagInfo 2 : flagInfo
    worship 3 : string 
}

.buffinfo {
	id 0 : string
	type 1 : string
	isUsed 2 : boolean
}

.reignAdInfo {
    typ 0 : string
    start 1 : string
    finish 2 :string
    uid 3 :string
}

.foreverGift {
    id 0 : string
    # 结束时间
    startTimestamp 1 : integer
}

.currentDemonKingPlanInfo {
	start 0 : integer
    finish 1 : integer
    goldExchangeTime 3 : integer
	growPoint 4 : integer
	rankPoint 5 : integer
	growPlanId 6 : string
	rankPlanId 7 : string
	growIsLightUp 8 : boolean
	rankIsLightUp 9 : boolean
	growPickedRecord 10 : *pickedInfo(id)
	rankPickedRecord 11 : *pickedInfo(id)
	uid 12 : string
	growAchieveLevel 13 : integer
	rankAchieveLevel 14 : integer
	growShowGoldLevel 15 : integer
	rankShowGoldLevel 16 : integer
	
}

.pickedInfo {
	id 0 : string
	common 1 : boolean
	senior 2 : boolean
}
.kindredSkillInfo {
    skillId 0 : string
    curValue 1 :integer
}

.kindredInfo {
    id 0 : string
    level 1 : integer
    breakLevel 2 : integer
    skillInfo 3 : *kindredSkillInfo
}

.perfumeInfo {
    key 0 : string
    count 1 : integer
}

.attackRecordInfo {
	id 0 : string
	fight 1 : boolean
	usedItem 2 : boolean
}

.event {
	groupId 0 : string
	isPicked 1 : boolean
	isDone 2 : boolean
	startTime 3 : integer
	type 4 : integer
	needAbilityType 5 : string
	needAbilityNum 7 : integer
	bossHp 8 : integer
	leftHp 9 : integer
	attackRecord 10 : *attackRecordInfo(id)
	eventId 11 : string
	choiceResult 12 : string
	missionId 13 : string
}

.ongoingEventSyncInfo {
	wifeId 0 : string
	groupId 1 : string
	events 2 : *event
}
.ongoingEventGroupInfo {
	wifeId 0 : string
	groupId 1 : string
	events 2 : *event
}

.assassinAttackRecord {
	id 0 : string
	fight 1 : boolean
}

.assassinInfo {
	leftHp 0 : integer
	currentRound 1 : integer
	currentStage 2 : string
	attackRecord 3 : *assassinAttackRecord(id)
	assassinId 4 : integer
	isEnd 5 : boolean
	uid 6 : string
}

.reignQuestUnderlings {
	underlingID 0 : string
	level 1 : integer
}

.userDispatchList {
	userID 0 : string
	totalProp 1 : integer
	underlings 2 : *reignQuestUnderlings(underlingID)
	dispatchTimestamp 3 : integer
}

.reignQuestUserDataObj {
	# 任务ID
	questID 0 : string
	# 领地ID
	reignID 1 : string
	# 领主ID
	reignOwnerID 2 : string
	# 每日任务玩家数据列表
	userDispatchList 3 : *userDispatchList(userID)
}

.reignQuestDataList {
	# 刷新任务的周一的时间戳
	freshQuestMondayTime 0 : integer
	# 当天任务的结束时间戳
	questEndTimestamp 1 : integer
	reignQuestUserDataList 2 : *reignQuestUserDataObj(questID)
}
.roomInfo {
	roomOwner 0 : string
	partyStatus 1 : integer
	partyStartTime 2 : integer
	partyEndTime 3 : integer
	roomCapacity 4 : integer
	roomType 5 : string
	ownerBuff 6 : integer
	guestsCountNum 7 : integer
	guestsInfo 8 : *roomGuestInfo(playerId)
	recordInfo 9 : *roomRecordInfo(time)
	roomBuildTime 10 : integer
	protectedEndTime 11 : integer
	protectItem 12 : string
	isProtected 13 : integer
}

.roomHeadInfo {
	type 0 : integer
	picture 1 : string
	frame 2 : string
}

.roomGuestInfo {
	playerId 0 : string
	positionIndex 1 : integer
	joinTime 2 : integer
	level 3 : integer
	name 4 : string
	title 5 : string
	headInfo 6 : roomHeadInfo
	recharge 7 : integer
	avatar 8 : string
    avatartype 9 : integer
	allTitles 10 : *string
}

.roomRecordInfo {
	time 0 : integer
	eventType 1 : integer
	playerId 2 : string
	challengerId 3 : string
	playerName 4 : string
	challengerName 5 : string
	playerTitle 6 : string
	playerAllTitles 7 : *string
}

.startedRoomInfo {
	roomOwner 0 : string
	partyStatus 1 : integer
	partyStartTime 2 : integer
	partyEndTime 3 : integer
	roomCapacity 4 : integer
	roomType 5 : string
	ownerBuff 6 : integer
	guestsCountNum 7 : integer
	isJoin 8 : boolean
	roomBuildTime 9 : integer
	roomOwnerHeadInfo 10 : roomHeadInfo
	roomOwnerTitle 11 : string
	roomOwnerName 12 : string
	roomOwnerRecharge 13 : integer
	roomOwnerAvatar 14 : string
    roomOwnerAvatarType 15 : integer
	protectedEndTime 16 : integer
	roomOwnerAllTitles 17 : *string
}

.fightResult {
	fightStage 0 : string
	defenderNum 1 : integer
	challengerNum 2 : integer
	isSuccess 3 : boolean
}

.reignQuestShopData {
	shopID 0 : string
	# 本日/周已经兑换的数量
	count 1 : integer
}

.smallactivitiesInfo { 
	id 0 : string
	tempId 1 : string
	start 2 : integer
	finish 3 : integer
	sendFlag 4 : integer
}

.dayTask {
	taskId 0 : string
	requestCount 1 : integer
	taskDone 2 : boolean
}

.oneDayInfo {
	id 0 : string
	day 1 : string
	storyStartTime 2 : integer
	readStoryDone 3 : boolean
	dayTasks 4 : *dayTask(taskId)
}

.selfTaskInfo {
	allDaysInfo 0 : *oneDayInfo(day)
}

.smallChangeInfo {
	old 0 : item
	new 1 : item
}

.smallNews {
	name 0 : string
	itemId 1 : string
	count 2 : integer
}

.unlockKeyTime {
	key 0 : string
	time 1 : integer
}

.nomiee {
	id 0 : string
	votes 1 : integer
}

.votedInfo {
	id 0 : string
	count 1 : integer
	nomineeId 2 : string
}

.electionInfo {
	state 0 : string
	start 1 : integer
	finish 2 : integer
	totalVotes 3 : integer
	votesRank 4 : *string
	nomineeList 5 : *nomiee(id)
	votedList 6 : *votedInfo(id)
}

.anniversaryInfo {
    # AnniversaryEventReward 的 id
	id 0: integer
	# 兑换的次数
	count 1: integer
}

.anniversaryEvent {
	# 活动uid
	uid 0:string
	# 活动开始时间
    start 1:integer
	# 活动结束时间
	finish 2:integer
	# 活动类型
	typ 3:string
	# 任务列表
	taskList 4:*taskList(taskType)
	# 领奖列表 	按照AnniversaryEventQuest的ID
	rewardList 6: *string
	# 商店购买列表
	shopList 7: *anniversaryInfo(id)
	# 此次活动总分数
	totalScore 8 : integer
}

# 新皮肤活动的格子数据
.newOutfitRowData {
	# 这里加上rowID 客户端方便
	columnID 0 : string
	rowID 1 : string
    # 状态 0 未翻开，1 已翻开, 2 已领取
    state 2 : integer
	# 格子类型 0 空格，1 道具，2 横2格宝箱，3 竖2格宝箱，4 4格宝箱，5 敌人， 6 路
	gridType 3 : integer
	# 如果是宝箱，标识是第几块(0是不分块的，1-2或者1-4 看rewardID)
	piece 4 : integer
	# nextRow 和 nextColumn 只有在gridType 是 6 或者 7 的时候有
	nextRow 5 : integer
	nextColumn 6 : integer
	# 奖励道具ID 只有在gridType == 1 时
	itemID 7 : string
	# 奖励道具count 只有在gridType == 1 时
	itemCount 8 : integer
	# 敌人ID 只有在gridType == 5 时
	enemyID 9 : integer
	# 敌人等级 只有在gridType == 5 时
	enemyLevel 10 : integer
	# 敌人类型 F I E S atk
	enemyType 11 : string
	# 敌人最大血量
	enemyMaxHP 12 : integer
	# 敌人最大血量剩余血量
	enemyRemainHP 13 : integer
	# 派遣的属下列表
	underlingList 14 : *string
	# 敌人削弱百分比
	enemyWeakenPct 15 : integer
}

# 新皮肤活动的格子列表结构
.newOutfitGridList {
    # 格子的行和列
    rowID 0 : string
	rowData 1 : *newOutfitRowData(columnID)
}

# 新皮肤活动的保底数据
.baoDiData {
    id 0 : string
	num 1 : integer
}

.teamInfo {
	teamNo 0 : string
	rdType 1 : string
	underlings 2 : *string
}

.fragmentsExchangeInfo {
	sender 0 : string
	receiver 1 : string
	itemId 2 : string
	count 3 : integer
	time 4 : integer
	uid 5 : string
	score 6 : integer
	state 7 : string # 1 等待我处理 2 等待对方处理 3 历史记录 "1-1" 等待我接收碎片 "1-2" 等待我接收积分 "1-3" 等待我收回对方退了的碎片 "2-1" 等待我可以取消的赠送 "3-1" 接收了碎片 "3-2" 我拒绝接收 "3-3" 对方取消赠送 "3-4" 我取消赠送 "3-5" 我回收碎片 "3-6" 领取了积分 
}
# 新皮肤活动的保底数据
.rollData {
    gridType 0 : string
	weight 1 : integer
}

.adventureGoldShopRecord {
	id 0 : string
	count 1 : integer
}
# 已获得的活动特殊效果ID和加成值
.newOutfitSpecialReward {
	# 活动uid
	specialID 0 : integer
	# 效果
	effectValue 1 : integer
}

.receiveRemainingInfo {
	id 0 : string
	remaining 1 : integer
}

.adventureInfo {
	setOutRemaining 0 : integer
	giveRemaining 1 : integer
	receiveRemaining 2 : *receiveRemainingInfo(id)
	recoveryTime 3 : integer
	goldShopRecord 4 : *adventureGoldShopRecord(id)
	id 5 : string
}

.rdInfo {
	rdType 0 : string
	rdGrade 1 : integer
	configId 2 : string
	abbreviation 3 : string
	evolutionState 4 : string
	evolution 5 : *string
}

.pickedAchievement {
	id 0 : integer
	count 1 : integer
}


.adventureAchievement{
	type 0 : string
	count 1 : integer
}

.newOutfitEvent {
	# 活动uid
	uid 0:string
	# 活动开始时间
    start 1:integer
	# 活动结束时间
	finish 2:integer
	# 活动类型
	typ 3:string
	# 格子数据
	gridList 4:*newOutfitGridList(rowID)
	# 领奖列表 	按照NewOutfitEventReward的ID
	rewardList 5: *string
	# 总的敌人削弱百分比
	enemyWeakenPct 6 : integer
	maxRow 7 : integer
	openNum 8 : integer
	enemyNum 9 : integer
	totalScore 10: integer
	rollData 11 : *rollData(gridType)
	baoDiData 12 : *baoDiData(id)
	recoverTime 13 : integer
    #金手指标记,1的时候激活
    goldfinger 14 : integer
}

.adventureADInfo {
    typ 0 : string
    start 1 : string
    finish 2 :string
    uid 3 :string
}	

.damageInfo { #伤害统计
	id 0 : string
	damage 1 : integer
	name 2 : string
	title 3 : string
    allTitles 4 : *string
	guildName 5 : string
}

.zoneInfo {
	bossUid 0 : string
	hp 1 : integer
	leftHp 2 : integer
	areaId 3 : string
	fightingTeams 4 : *integer
	openTime 5 : integer
	teamLeader 6 : integer #boss开启人
	deadlineTime 7 : integer #截止时间
	damageStatistics 8 : *damageInfo(id)
	state 9 : string #给邀请列表使用的状态
	ownTeamLeader 10 : integer
	meanwhileInviteLimit 11 : integer
	isRandom 12 : string
}

.areaZonesInfo {
	areaId 0 : string
	progress 1 : integer #触发进度
	bossesInfo 2 : *zoneInfo(bossUid)
}

.teamZonesInfo {
	selfZones 0 : *areaZonesInfo(areaId) #自己开启的副本
	otherZones 1 : *zoneInfo(bossUid) #加入别人的副本
	beInvitedLimit 2 : integer
}
.routePoints {
	id 0 : string
	distance 1 : integer
	type 2 : string
	count 3 : integer
	stage 4 : string
	areaId 5 : string
	hp 6 : integer
	reward 7 : item
	time 8 : integer
	cTime 9 : integer
	map 10 : string
}

.rankingInfo {
	id 0 : integer
	score 1 : integer
	rank 2 : integer
	name 3 : string
	title 4 : string
	allTitles 5 : *string
}

adventure_rd_upgrade 9201 {

	request {
		rdType 0 : string
	}
	
	response {
		r 0 : integer
		rdInfo 1 : rdInfo
		items 2 : *item(id)
	}
	
}

adventure_choice_rd_type 9202 {
	
	request {
		teamNo 0 : string
		rdType 1 : string
	}
	
	response {
		r 0 : integer
		teams 1 : *teamInfo(teamNo)
	}
	
}

adventure_set_team_underlings 9203 {
	request {
		teamNo 0 : string 
		underlings 1 : *string
	}
	response {
		r 0 : integer
		teams 1 : *teamInfo(teamNo)
	}
}

adventure_rd_evolution 9204 {
	request {
		rdType 0 : string
	}
	response {
		r 0 : integer
		rdInfo 1 : rdInfo
	}
}

adventure_get_rd_info 9205 {
	request {
		
	}
	response {
		r 0 : integer
		rdInfo 1 : *rdInfo(rdType)
	}
}

adventure_teams_set_out 9206 {
	request {
		treasureMap 0 : string
	}
	response {
		r 0 : integer
		route 1 : *routePoints(id)
		maxTime 2 : integer
	}
}

adventure_give_fragments 9207 {
	request {
		cid 0 : string
		itemId 1 : string
		count 2 : integer
		
	}
	response {
		r 0 : integer
		items 1 : *item(id)
	}
}

adventure_receive_exchange 9208 {
	request {
		uid 0 : string
	}
	response {
		r  0 : integer
		items 1 : *item(id)
		score 2 : integer
	}
}

adventure_reject_exchange 9209 {
	request {
		uid 0 : string
	}
	response {
		r 0 : integer
	}
}

adventure_cancel_exchange 9210 {
	request {
		uid 0 : string
	}
	response {
		r 0 : integer
		items 1 : *item(id)
	}
}

adventure_get_guild_exchange_history 9211 {
	request {
	
	}
	response {
		r 0 : integer
		info 1 : *fragmentsExchangeInfo(uid)
	}
}

adventure_make_up_map 9212 {
	request {
		mapId 0 : string
	}
	response {
		r 0 : integer
		items 1 : *item(id)
	}
}

adventure_point_reward_count 9213 {
	request {
		pointIds 0 : *string
		distance 1 : integer
	}
	response {
		r 0 : integer
		allRewards 1 : *item(id)
		score 2 : integer
		curDistance 3 : integer
		oldDistance 4 : integer
		treasureRewards 5 : *item(id)
		items 6 : *item(id)
		newBestSingleDistance 7 : integer
		newBestSingleScore 8 : integer
	}
}

adventure_get_ranking_info 9214 {
	request {
	
	}
	response {
		r 0 : integer
		rankingInfo 1 : *rankingInfo
		selfRankInfo 2 : rankingInfo
	}
}

adventure_pick_achievement_reward 9215 {
	request {
		id 0 : string
	}
	response {
		r 0 : integer
		items 1 : *item(id)
	}
}

adventure_get_self_route 9216 {
	request {

	}
	response {
		r 0 : integer
		route 1 : *routePoints(id)
		maxTime 2 : integer
	}
}

adventure_get_distance_ranking_info 9217 {

	request {
	
	}
	response {
		r 0 : integer
		rankingInfo 1 : *rankingInfo
		selfRankInfo 2 : rankingInfo
	}
}

adventure_gold_shop_buy 9218 {
	request {
		id 0 : string
	}
	response {
		r 0 : integer
		items 1 : *item(id)
	}
}

adventure_use_adventure_item 9219 {
	request {
		id 0 : string
	}
	response {
		r 0 : integer
		items 1 : *item(id)
	}
}

adventure_get_guild_personal_info 9220 {
	request {
		guildId 0 : string
	}
	response {
		r 0 : integer
		info 1 : *adventureInfo(id)
	}
}

.guildMemberDistance {
	id 0 : string
	distance 1 : integer
}

adventure_get_guild_members_distance 9021 {
	request {
	
	}
	response {
		r 0 : integer
		info 1 : *guildMemberDistance
	}
}

.crossPlayer {
    id 0 :integer
    rank 1 :integer
    score 2: integer
    name 3:string
    serverId 4 :string
    guild 5 :string
    # 使用的称号
	title 6:string
    # 拥有的所有称号
    allTitles 7:*string
}

.crossServer {
    id 0 :string
    rank 1:integer
    score 2:integer
}


# 基础信息
area_cross_info 5001 {
    request {
        
    }
    response {
        r 0 : integer
        crossInfo 1: *crossInfo(configId)
    }
}


area_cross_joiner 5002 {
    request {
        configId 0 :string
    }
    response {
        r 0 :integer
        joiner 1 : *crossPlayer
    }
}

area_cross_enter 5003 {
    request {
        configId 0 :string
    }
    response {
        r 0 :integer
        #本人分数
        selfScore 1 : integer
        selfRank 2 : integer
        #前三服
        topServerRanks 3 : *crossServer 
        #前三人
        topPlayerRanks 4 : *crossPlayer
        #服务器排名
        selfServerRank 5 : integer
    }

}


area_cross_top_server 5004 {
    request {
        configId 0 : string
    }

    response {
        r 0 :integer
        #本服分数
        selfScore 1 : integer
        selfRank 2 : integer
        serverRanks 3 : *crossServer 
    }


}

area_cross_top_player 5005 {
    request {
        configId 0 : string
    }

    response {
        r 0 :integer
        selfScore 1 : integer
        selfRank 2 : integer
        playerRanks 3 : *crossPlayer 
    }


}

area_refresh_cross 5006 {
    request {

    }

    response {
        r 0 : integer
    }
}

area_refresh_cross_game 5007 {
    request {

    }
    response {
        r 0 :integer
    }
}# 登录
verify_token 1001 {
	request {
		token 0 : string
	}

	response {
		# 1 未创建角色
		r 0 : integer
		character 1 : characterbasic
		# 服务器时间
		time 2 : integer
		# 新生成的token
		token 3 : string
		# 版本号
		version 4 : integer
		# 玩家平台账号ID
		userName 5 : string
	}
}

create_character 1002 {
	request {
		name 0 : string
		avatar 1 : string
	}

	response {
		r 0 : integer
		character 1 : characterbasic
	}
}

heartbeat 1003 {
	request {}
	response {
		r 0 : integer
		time 1:integer
	}
}

mail_open 1004 {
	request {
		id 0 : string
	}

	response {
		r 0 : integer
		int 1 : integer
		str 2 : string 

		# 物品数量变化
		items 3 : *item(id)
	}
}

mail_test 1005 {
	request {
		id 0 : string
	}

	response {
		mails 0 : *mail
	}
}

# 重连消息，需cid和token，有cid就发cid，没有就发0，必要的是token
reconnect 1006 {
	request {
		cid 0 : integer
		token 1 : string
	}

	response {
		r 0 : integer
	}
}# 2400 美女相关
# 出游部分
# 出游一次
.find {
    # 遇到的美女，可以为空
    beauty 0 : beauty
    # 遇到的npc，可以为空
    npcid 1 : string
    # 遇到NPC获得的资源，可以为空
    item 2 : item
    # 如果beauty 与 npcid皆为空说明没遇到任何人
    #初次见面
    firstMeet 3 : integer
    # 附庸
    vassal 4 : vassal
    #npc 初次见面
    npcfirstmeet 5 : boolean
	buffEffect 6 : integer
	buffReward 7 : item
}

beauty_find 2401 {
    request {
        
    }
    response {
        r 0 : integer
        find 1 : find
        # 物品数量变化
        items 2 : *item(id)
        # 下点出游体力恢复时间点
        fe 3 : integer
        # 下点出游幸运恢复时间点
        fl 4 : integer
		findAssassin 5 : boolean
    }
}

# 一键出游
beauty_find_all 2402 {
    request {
        
    }
    response {
        r 0 : integer
        # 多次出游后的结果
        finds 1 : *find
        # 物品数量变化
        items 2 : *item(id)
        # 下点出游体力恢复时间点
        fe 3 : integer
        # 下点出游幸运恢复时间点
        fl 4 : integer
		findAssassin 5 : boolean
    }
}

# 恢复出游体力
beauty_recovery_fe 2403 {
    request {
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 3 : *item(id)
    }
}

# 恢复出游幸运
beauty_recovery_fl 2404 {
    request {
        # 回复道具使用数量
        count 0 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        # 免费次数变化情况
        freefl 2 : integer
        freeflrecovery 3 : integer
    }
}

# 恢复DE
beauty_recovery_de 2420 {
    request {
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

.date {
    # 美女id
    id 0 : string
    # 经验
    exp 1 : integer
    # 魅力
    intimacy 2 : integer
    # 是否神迹
    miracle 3:boolean
}

# 约会
beauty_date 2405 {
    request {
        # 指定约会对象，为空时表示随机
        id 0 : string
    }

    response {
        r 0 : integer
        date 1 : date
        # 物品数量变化
        items 2 : *item(id)
        # 下点约会精力恢复时间点
        de 3 : integer
    }
}

# 一键约会
beauty_one_click_date 2406 {
    request {
        
    }

    response {
        r 0 : integer
        dates 1 : *date
        # 物品数量变化
        items 2 : *item(id)
        # 下点约会精力恢复时间点
        de 3 : integer
    }
}

# 送礼物
beauty_gift 2407 {
    request {
        # 美女id
        id 0 : string
        # 物品id
        itemid 1 : string
        # 数量
        count 2 : integer
    }

    response {
        r 0 : integer
        beauty 1 : beauty
        # 物品数量变化
        items 2 : *item(id)
    }
}

# 升级技能
beauty_skill_level_up 2408 {
    request {
        # 美女id
        id 0 : string
        skillid 1 : string
    }

    response {
        r 0 : integer
        skill 1 : skill
        # 剩余经验
        exp 2 : integer
    }
}

# 指定妃位
beauty_set_position 2409 {
    request {
        # 美女id
        id 0 : string
        # 指定位置见WifeLevel表
        position 1 : string
    }

    response {
        r 0 : integer
    }
}

# 技能升星
beauty_skill_star_upgrade 2410 {
    request {
        # 美女id
        id 0 : string
        skillid 1 : string
    }

    response {
        r 0 : integer
        skill 1 : skill
        # 物品数量变化
        items 2 : *item(id)
    }
}

# 创建活动
beauty_create_activity 2430 {
    request {
        # 美女id
        id 0 : string
        # 创建活动对应的配置id
        config 1 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        activity 2 : beautyactivity
    }
}

# 搜索活动
beauty_find_activity 2431 {
    request {
        # 活动id
        id 0 : string
    }

    response {
        activity 0 : beautyactivity
    }
}

# 搜索全部活动
beauty_find_all_activity 2432 {
    request {
    }

    response {
        activities 0 : *beautyactivity(id)
    }
}

# 参与空位活动
beauty_join_activity 2433 {
    request {
        # 美女id
        id 0 : string
        # 活动id
        activityid 1 : string
    }

    response {
        # 403 被踢了禁止加入
        # 102 超过上限
        # 404 活动不存在
        r 0 : integer
        # 成功参与后的活动
        activity 1 : beautyactivity
        # 物品数量变化
        items 2 : *item(id)
        time 3 : integer
    }
}

# 抢位参与活动
beauty_fight_activity 2434 {
    request {
        # 美女id
        id 0 : string
        # 活动id
        activityid 1 : string
        # 对手id
        opponent 2 : integer
    }

    response {
        # 103 保护中
        # 403 被踢了禁止加入
        # 404 活动不存在
        # 104 地位不如对方
        # 105 数值不如
        r 0 : integer
        # 成功参与后的活动
        activity 1 : beautyactivity
        # 物品数量变化
        items 2 : *item(id)
        time 3 : integer
    }
}

# 活动保护
beauty_make_activity_protected 2435 {
    request {
        # 活动id
        id 0 : string
    }

    response {
        # 101 非创建者
        # 102 保护时间超过完结时间
        # 404 活动不存在
        r 0 : integer
        activity 1 : beautyactivity
        # 物品数量变化
        items 2 : *item(id)
    }
}

beauty_kick_activity 2436 {
    request {
        # 活动id
        id 0 : string
        # 踢得人的id
        userid 1 : integer
    }

    response {
        # 101 非创建者
        # 102 踢得人不存在
        # 404 活动不存在
        r 0 : integer
        activity 1 : beautyactivity
        # 物品数量变化
        items 2 : *item(id)
    }
}

# 解锁槽位
vassal_increase_unlock 2501 {
    request {
    }

    response {
        r 0 : integer
        # 解锁后槽的数量
        unlock 1 : integer
        # 物品数量变化
        items 2 : *item(id)
    }
}

# 支援
vassal_support 2502 {
    request {
        # 附属id
        id 0 : string
    }

    response {
        r 0 : integer
        # 志愿后的属性
        vassal 1 : vassal
		increment 2 : integer
		items 3 : *item(id)
    }
}

# 一键支援
vassal_one_click_support 2503 {
    request {
    }

    response {
        r 0 : integer
        # 支援后有变动的附属的属性
        vassals 1 : *vassal(id)
		items 2 : *item(id)
    }
}

# 分配区域
vassal_assign_domain 2504 {
    request {
        # 附属id
        id 0 : string
    }

    response {
        r 0 : integer
    }
}

# 清楚暴露风险
vassal_clear_ce 2505 {
    request {
        # 附属id
        id 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

# 附属请求合作
vassal_cooperation 2510 {
    request {
        # 附属id
        id 0 : string
        # 指定合作对象，不传说明是非指定
        specify 1 : integer
        # 使用物品类型（0：不使用，1：使用物品，2：使用钻石）
        useitem 2 : integer
    }

    response {
        r 0 : integer
        cancooperate 1 : *cooperation
        # 物品数量变化
        items 2 : *item(id)
        # 全服匹配刷新结束时间
        cd 3 : integer
        # 对方名字
        cooperationName 4 : string
		buffid 5 : string
    }
}

# 刷新可选合作对象状态
vassal_cooperation_suggest_status_refresh 2511 {
    request {
        # 附属id
        id 0 : string
    }

    response {
        r 0 : integer
        cancooperate 1 : *cooperation
    }
}

# 取消合作
vassal_cancel_cooperation 2512 {
    request {
        # 附属id
        id 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        vassal 2 : vassal
    }
}

# 刷新合作对象
vassal_cooperation_suggest_refresh 2513 {
    request {
        # 附属id
        id 0 : string
        # 不考虑cd 强制刷新
        force 1 : boolean
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        cancooperate 2 : *cooperation
        cd 3 : integer
    }
}

# 选择推荐
vassal_select_cooperation_suggest 2514 {
    request {
        # 附属id
        id 0 : string
        # cancooperate数组的索引
        index 1 : integer
        useitem 2 : integer
    }

    response {
        # 101 已经不在合作状态
        # 404 对方已不再进行合作
        # 103 对方已有合作对象
        r 0 : integer
        vassal 1 : vassal
        # 物品数量变化
        items 2 : *item(id)
    }
}

vassal_select_in_latest_cooperation 2522 {

	request {
		id 0 : string
		vassalId 1 : string
		useitem 2 : integer 
	}
	
	response {
        # 101 已经不在合作状态
        # 404 对方已不再进行合作
        # 103 对方已有合作对象
        r 0 : integer
        vassal 1 : vassal
        # 物品数量变化
        items 2 : *item(id)
    }
	
} 

# 处理合作请求邮件，同意或拒绝后邮件会被删除
# 同意
vassal_permit_cooperate 2515 {
    request {
        # 附属id
        id 0 : string
        # 邮件id
        mailid 1 : string
        # 贸易契约类型
        useitem 2 : integer
    }

    response {
        # 101 已经不在合作状态
        # 404 对方已不再进行合作
        # 103 对方已有合作对象
        r 0 : integer
        vassal 1 : vassal
        # 物品数量变化
        items 2 : *item(id)
    }
}

# 拒绝
vassal_reject_cooperate 2516 {
    request {
        # 邮件id
        mailid 0 : string
    }

    response {
        r 0 : integer
    }
}

# 清除建设CD
vassal_clear_recovery 2517 {
    request {
        # 附属id
        id 0 : string
        #使用物品个数
        count 1: integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        #贸易信息更新
        vassal 2 : vassal
    }
}

#一键清除建设CD
vassal_on_click_clear_recovery 2518 {
    request {
    }

    response {
        r 0 : integer
        # 清除后有变动的附属的属性
        vassals 1 : *vassal(id)
        # 物品数量变化
        items 2 : *item(id)
    }
}


#起初始名字
vassal_update_name 2519 {
    request {
        #贸易地Id
        id 0:string
        #贸易地名称
        name 1:string
    }

    response {
        r 0 : integer
        # 更新
        vassal 1 : vassal
    }
}


# 处理合作请求聊天，同意或拒绝后聊天会被更新
# 同意
vassal_chat_select_cooperate 2520 {
    request {
        # 附属id
        id 0 : string
        # 聊天id
        chatid 1 : string
        # 贸易契约类型
        useitem 2 : integer
    }

    response {
        # 101 已经不在合作状态
        # 404 对方已不再进行合作
        # 103 对方已有合作对象
        r 0 : integer
        vassal 1 : vassal
        # 物品数量变化
        items 2 : *item(id)
    }
}

# 检查合作请求聊天
# 同意
vassal_chat_check_cooperate 2521 {
    request {
        # 聊天id
        chatid 0 : integer
    }

    response {
        # 101 已经不在合作状态
        # 404 对方已不再进行合作
        # 103 对方已有合作对象
        r 0 : integer
    }
}

vassal_wife_join_quit_team 2523 {

	request {
		id 0 : string
		wifeid 1 : string
		teamIndex 2 : integer
		# 进队 给 join 出队 给个leave 啥都行
		joinQuitFlag 3 : string
		# 1 为使用金块，2为使用道具
		useType 4 : integer
	}

	response {
		r 0 : integer
		items 1 : *item(id)
		vassal 2 : vassal
	}
	
}

beauty_get_can_join_team_wives 2524 {
	
	request {
	
	}
		
	response {
		wivesId 0 : *string
	}
}


#皇陵主界面信息
#
crossmausoleum_mausoleum_info 2901 {
    request {

    }
    response {
        r 0:integer
        #gridInfo中没有gridRecord和bossLeftHp字段
        simpleGridList 1 : *gridInfo(id)
        #没有underlings字段
        playerMausoleumInfo 2 : mausoleumPlayerInfo
    }
}

#打开一个格子
crossmausoleum_open_tile 2902 {
    request {
        #格子Id
        tileId 0 : integer
    }
    response {
        r 0:integer
        gridInfo 1 : gridInfo
        items 2 : *item(id)
    }

}

#进入格子boss
crossmausoleum_enter_tile_boss 2903 {
    request {
        tileId 0 : integer
    }
    response {
        r 0:integer
        gridInfo 1 : gridInfo
        playerMausoleumInfo 2 : mausoleumPlayerInfo
        items 3 : *item(id)
    }

}

#攻击格子boss
crossmausoleum_atk_tile_boss 2904 {
    request {
        tileId 0 : integer
        #使用武将id
        underlingId 1 : string
    }
    response {
        r 0:integer
        gridInfo 1 : gridInfo
        playerMausoleumInfo 2 : mausoleumPlayerInfo
        hitScore 3 : integer
        killScore 4 :integer
        realAtk 5 :integer
        items 6 : *item(id)
    }
}

#打开格子宝箱
crossmausoleum_unlock_tile_box 2905 {
    request {
        tileId 0 : integer
    }
    response {
        r 0:integer
        gridInfo 1 : gridInfo
        #物品更新
        items 2 : *item(id)
    }
}

#购买资源商店
crossmausoleum_buy_resource_item 2906 {
    request {
        goodsId 0 : string
        buyCount 1 : integer
    }
    response {
        r 0:integer
        items 2 : *item(id)
    }
}

#购买积分商店
crossmausoleum_buy_score_item 2907 {
    request {
        goodsId 0 : string
    }
    response {
        r 0:integer
        items 2 : *item(id)
    }
}

#使用出战令
crossmausoleum_use_drug 2908 {
    request {
        underlingId 0 : string
    }
    response {
        r 0:integer
        items 2 : *item(id)
    }
}



# CROSSPVP start
# 竞技场注册
crosspvp_arena_register 6001 {
    request {

    }

    response {
        r 0 : integer
        crossarena 1 : crossarena
    }
}

crosspvp_arena_top200 6002 {
    request {

    }

    response {
        # 前二百的人
        ranks 0 : *crossarenacharacter
        # 你的排名
        rank 1 : integer
    }
}

# 竞技场匹配
crosspvp_arena_match 6003 {
    request {

    }

    response {
        # 101 无法匹配，没有其他玩家
        r 0 : integer
        crossarena 1 : crossarena
        # 物品数量变化
        items 2 : *item(id)
    }
}

# 选择buff
crosspvp_arena_select_buff 6004 {
    request {
        # 选择应用哪个buff,索引从1开始
        index 0 : integer
    }

    response {
        r 0 : integer
        crossarena 1 : crossarena
        items 2 : *item(id)
    }
}

.crossfightunderling {
    # 手下id
    id 0 : string
    # 当前hp，为0说明死了
    hp 1 : integer
}

.corssfightcontext {
    # 敌方本回合结束数值
    enemy 0 : crossfightunderling
    # 我方本回合结束数值
    mine 1 : crossfightunderling
    # 敌人是否暴击
    enemycrit 2 : boolean
    # 我是否暴击
    minecrit 3 : boolean
    # 是否先手
    offensive 4 : boolean
}




# 竞技场战斗
crosspvp_arena_fight 6005 {
    request {
        # 选择的对手selecteds中,索引从1开始
        index 0 : integer
    }

    response {
        r 0 : integer
        # 战斗数据
        contexts 1 : *corssfightcontext
        crossarena 2 : crossarena
        # 物品数量变化
        items 3 : *item(id)
        # 是否结束
        finish 4 : boolean
        # 完结后手下数据更新
        underling 5 : underling
        # 3胜抽奖结果,有本值有抽奖 这个就没用了
        beat3reward 6 : item
		fightRewardList 7 : *item(id)
		reignbuffeffect 8 : boolean
		reignbuff 9 : reignbuffinfo
    }
}

# 竞技场20杀以上记录
crosspvp_arena_messages 6006 {
    request {

    }

    response {
        messages 0 : *crossarenarecord
    }
}

# 挑战、复仇、追杀
crosspvp_revenge_chase 6007 {
    request {
        # 复仇时为邮件id，其他时为玩家id
        target 0 : string
        # 派出的手下
        underlingid 1 : string
        # 类型挑战AC : 3、复仇AC : 4、追杀AH : 5
        type 2 : integer
        # 挑战记录uid，一条记录可以挑战一次
        uid 3 : string
    }

    response {
        # 101 无法匹配，没有其他玩家
        r 0 : integer
        crossarena 1 : crossarena
        items 2: *item(id)
    }
}

crosspvp_revenge_character 6008 {
    request {
        id 0 : integer
    }

    response { 
        character 0 : crossarenarevengecharacter
    }
}

#选择普通竞技场出战武将（3选1）
crosspvp_select_underling 6009 {
    #选择index
    request {
        #普通选择index不和指定武将同时存在
        index 0 : integer
        #指定武将的Id，默认是0
        underlingid 1 : string
    }
    response {
        r 0 : integer
        crossarena 1 : crossarena
        #(也不一定会有的)物品变化
        items 2 : *item(id)
    }
}

#玩家被挑战记录
crosspvp_arena_record 6010 {
    #选择index
    request {

    }
    response {
        r 0:integer
        messages 1 : *crossarenarecord
    }
}


crosspvp_fast_fight 6011 {
    #buff选择index
    request {
        index 0 : integer #当前回合buff选择
        buffindex 1 : integer #后续回合buff选择
    }

    response { 
        # 1 vip等级不够 2魔王等級不够 3结束时间错误 4竞技失败
        r 0 : integer
        # 战斗数据
        crossarena 1 : crossarena
        # 物品数量变化
        items 2 : *item(id)
        # 完结后手下数据更新
        underling 3 : underling
        # 花费buff次数(id是buff的index,count次数)
        costbuff 4 : item
        # 3胜抽奖结果,有本子有抽奖
        rewardlist 5 : *item(id)
        myscore 6 : integer
        enemyscore 7 :integer
        wincount 8 : integer
        allbeat 9 : boolean
        mine 10 : crossarenaunderling
		reignbuff 11 : reignbuffinfo
    }
}


.crossarenarecord {
    uid 0 : string
	targetId 1:integer
	enemy 2:charactersimple
	beatcount 3:integer
	underling 4:string
	arenatype 5:integer
	allbeat 6 : boolean
    revenged 7: boolean
    recordTime 8 :integer
    currentscore 9 : integer
    targetName 10:string
    score 11:integer
}



event_pick_event 9001 {
	request {
        eventId 0 : string
    }

    response {
        r 0 : integer
        eventInfo 1 : event
    }
}

event_complete_event 9002 {
	request {
		eventId 0 : string
	}
	response {
		r 0 : integer
		ongoingEventsInfo 1 : *ongoingEventGroupInfo
		items 2 : *item(id)
		intimacy 3 : integer
		charm 4 : integer
	}
}

event_attack_boss 9003 {
	request {
		eventId 0 : string
		underlingId 1 : string
		useItem 2 : string
	}
	
	response {
		r 0 : integer
		eventInfo 1 : event
		dps 2 : integer
		items 3 : *item(id)
		intimacy 4 : integer
		charm 5 : integer
	}
}

event_use_fight_order 9004 {
	request {
		eventId	0 : string
		underlingId 1 : string
	}
	
	response {
		r 0 : integer
		eventInfo 1 : event
		items 2 : *item(id)
	}
}

event_clear_event_group 9005 {
	request {
		groupId 0 : string
	}
	
	response {
		r 0 : integer
		ongoingEventsInfo 1 : *ongoingEventGroupInfo
	}
}

event_attack_assassin 9006 {
	request {
		underlingId 0 : string
	}
	response {
		r 0 : integer
		assassinInfo 1 : assassinInfo
		baseDone 2 : boolean
		items 3 : *item(id)
		isEnd 4 : boolean
		chaseDone 5 : boolean
		dps 6 : integer
	}
}

event_quit_chase 9007 {
	request {
		
	}
	response {
		r 0 : integer
		assassinInfo 1 : assassinInfo
		isEnd 2 : boolean
	}
}
gachaevent_draw_lottery 7101 {	
	request {
		count 0 : integer
	}
	
	response {
		r 0 : integer
		count 1 : integer
		rewards 2 : *item(id)
		currank 3 : integer
		totalrank 4 : integer
		recordid 5 : string
		areaid 6 : integer
		# 物品数量变化
        items 7 : *item(id)
		nMarkingValue 8 : integer
	}	
}

gachaevent_get_lottery_record 7102 {
	request {
		recordid 0 : string
		count 1 : integer
		areaid 2 : integer
		nMarkingValue 3 :integer
	}
	
	response {
		r 0 : integer
		rewards 2 : *item(id)
		currank 3 : integer
		totalrank 4 : integer
		uid 5 : integer
		nMarkingValue 6 :integer
	}	
}

gachaevent_get_lottery_rank 7103 {
	request {
		count 0 : integer
	}
	
	response {
		r 0 : integer
		ranks 1 : *gacharankinfo
	}	
}

gachaevent_crystal_shop_exchange 7104 {
	request {
		id 0 : integer
	}
	
	response {
		r 0 : integer
		extraRewards 1 : *item(id)
		# 物品数量变化
        items 2 : *item(id)
	}	
}

gachaevent_dailySpecialGift_get 7105 {
	request {
		id 0 : string
	}
	
	response {
		r 0 : integer
		# 物品数量变化
        items 1 : *item(id)
	}	
}

gachaevent_specialGift_get 7106 {
	request {
		id 0 : string
	}
	
	response {
		r 0 : integer
		# 物品数量变化
        items 1 : *item(id)
	}	
}

gachaevent_storyReward_get 7107 {
	request {
		id 0 : string
	}
	
	response {
		r 0 : integer
		rewardedInfo 1 : *gachastoryinfo(id)
		# 物品数量变化
        items 2 : *item(id)
	}	
}

gachaevent_get_score_reward 7108 {
	request {
		id 0 : string
	}

	response {
		r 0 : string
		# 物品数量变化
        items 1 : *item(id)
	}	
}

gachaevent_get_task_reward 7109 {
	request {
		id 0 : string
	}

	response {
		r 0 : string
		# 物品数量变化
        items 1 : *item(id)
	}	
}

gachaevent_deal_exchange_item 7110 {
	request {
	}

	response {
		r 0 : string
		# 物品数量变化
        items 1 : *item(id)
		itemInfo 2 : *item
	}	
}

# 全局游戏内容，领奖、成就等
# 7日奖励
global_pick_seven_day_normal 3101 {
    request {
        # 领取奖励的第几天，1--7
        index 0 : integer
    }
    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

# 7日特殊奖励
global_pick_seven_day_special 3102 {
    request {
        # 领取奖励的第几天，1--7
        index 0 : integer
    }
    response {
        r 0 : integer
    }
}


global_breach_item 3103 {
    request {
        # 要合成的物品
        id 0 : string
        count 1 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

global_use_item 3104 {
    request {
        id 0 : string
        count 1 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        beautys 2 : *beauty
        # 手下
        underlings 3 : *underling(id)
        kindred 4 : kindredInfo
    }
}

# 购买礼包
global_buy_gift 3105 {
    request {
        id 0 : string
    }

    response {
        r 0 : integer
        # 购买次数
        count 1 : integer
        # 物品数量变化
        items 2 : *item(id)
    }
}

# 购买单次物品
global_buy_item 3106 {
    request {
        id 0 : string
    }

    response {
        r 0 : integer
        # 购买次数
        count 1 : integer
        # 物品数量变化
        items 2 : *item(id)
    }
}

# 创建充值订单
global_create_order 3107 {
    request {
        # 配置_id
        id 0 : string
        # 购买类型，1 购买金条充值文档，2 购买限时礼包 限时礼包商城文档
        type 1 : integer
    }

    response {
        r 0 : integer
        orderid 1 : string
    }
}



.party {
    creator 0 : charactersimple
    # 分数奖励
    creatorscore 1 : integer
    # 积分（可以花的）奖励
    creatorcoin 2 : integer
    # 普通？
    normal 3 : boolean
    # 参与的成员
    units 4 : *charactersimple
    # 结束时间
    finish 5 : integer
}

.partysimple {
    creator 0 : charactersimple
}

# 创建夜店聚会
global_create_party 3108 {
    request {
        # 是否创建普通聚会，false 豪华聚会
        normal 0 : boolean
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

# 参与聚会
global_join_party 3109 {
    request {
        # 加入类型，Party表_id列
        typ 0 : boolean
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

# 获取聚会信息
global_get_party 3110 {
    request {
        id 0 : integer
    }

    response {
        party 0 : party
    }
}

# 推荐聚会
global_party_suggest 3111 {
    request {}
    response {
        suggests 0 : *partysimple
    }
}

# 开启聚会功能, 默认partyjoin为空，注册后为0
global_register_party 3112 {
    request {}
    response {
        r 0 : integer
    }
}

global_party_rank 3113 {
    request {
    }

    response {
        ranks 0 : *rankcharacter
        rank 1 : integer
    }
}

global_pick_accumulate 3114 {
    request {
        # 种类 a b c
        typ 0 : string
        # 等级
        level 1 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

global_pick_vip_reward 3115 {
    request {
        # vip 等级id
        typ 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

global_get_characterinfo 3116 {
    request {
        id 0 : integer
    }

    response {
        # 为空表示没找到
        characterinfo 0 : characterinfo
        r 1 :integer      
    }
}

global_pick_longterm_sign 3117 {
    request {
    }

    response {
        r 0 : integer
		# 物品数量变化
		items 1 : *item(id)
		acclongterm 2: integer
        # 记录奖励物品
        logitems 3 : *item(id)
        
    }
}

global_top100 3118 {
    request {
        # power, pve, intimacy
        typ 0 : string
        targetId 1: integer
    }

    response {
        # 前100
        ranks 0 : *rankcharacter
        # 你的排名
        rank 1 : integer
        # 你的积分
        score 2 : integer
    }
}

global_tlr_remind_info 3143 {
	request {
		timeLimitRanks 0 : *string
	}

	response {
		r 0 : integer
		tlrRemindInfo 1 : *tlrRemindInfo
	}
}


.longtermsignlog {
    log 0 : *item
    time 1 : integer

}

# 签到记录
global_longterm_sign_log 3119 {
    request {}

    response {
        logs 0 : *longtermsignlog
    }
}

# 领取月卡年卡
global_pick_card 3120 {
    request {
        # 1 月卡、 2 至尊、 3 年卡
        typ 0 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

global_visit_top100 3121 {
    request {
        # 1 -- 6
        index 0 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

global_chat_history 3122 {
    request {
        # 1 个人聊天， 2 工会聊天，3 世界聊天
        typ 0 : integer
        # 个人聊天需要传，与谁的记录
        to 1 : integer
		crossChannelName 2 : string
    }

    response {
        histories 0 : *chatmessage
		r 1 : integer
    }
}

global_chat 3123 {
    request {
        # 1 个人聊天， 2 工会聊天，3 世界聊天
        channel 0 : integer
        # 内容类型，1 文字 2 表情 3 分享手下 4 分享附属 5 分享情人，2--5为id
        typ 1 : integer
        content 2 : string
        # 发送给谁，单人聊天需要
        to 3 : integer
        # 宝箱内容
        chestbox 4:chestBox
		crossChannelName 5: string
        gachachatinfo 6 : gachachatinfo
    }

    response {
        r 0 : integer
        # 多人聊天cd
        cd 1 : integer
    }
}

global_get_characterinfo_chat 3124 {
    request {
        id 0 : integer
    }

    response {
        characterinfo 0 : charactersimple
    }
}

global_rank 3125 {
    request {
        typ 0 : string
    }

    response {
        rank 0 : integer
    }
}

.underlingshare {
    id 0 : string
    # 等级
    level 1 : integer
    # 品质
    quality 2 : integer
    # 资质
    aptitudes 3 : *aptitude(id)
    # 吃书加成
    books 4 : *book(type)
    # 光环等级
    auralevel 5 : integer
    # pvp技能等级
    pvplevel 6 : integer
    # pvp技能当前经验
    pvpexp 7 : integer
    # 升级资质所用exp之前的q0
    q0 8 : integer
    # 属性总值
    total 9 : integer
    # 升级进度
    exp 10 : integer
    # 属性
    I 11 : integer
    F 12 : integer
    E 13 : integer
    S 14 : integer
    curOutfit 15 : string
}

global_chat_share_data 3126 {
    request {
        # 分享类型
        typ 0 : integer
        # 对方id
        id 1 : integer
        # 分享内容
        content 2 : string
    }

    response {
        underling 0 : underlingshare
        beauty 1 : beauty
        vassal 2 : vassal
        kindred 3 : kindredInfo
        underlingkindreds 4 : *kindredInfo(id)

    }
}

global_buy_underling 3127 {
    request {
        # EHeroEvents 表_id列
        cid 0 : string
        # hero列购买手下的索引从1开始
        index 1 : integer
    }

    response {
        # 101 活动未开始或已经结束
        r 0 : integer
    }
}



global_gain_chest 3128 {
    request {
        # 宝箱发送者
        ownerId 0 : integer
        # 宝箱cfgId
        chestId 1 : string

    }

    response {
        
        r 0 : integer
        # 宝箱信息
        boxInfo 1 : chestBox
		# 同步宝箱获得物品
		items 2 : *item(id)
    }
    
}

global_change_chat_flag 3129 {
    request {
        # index 0 接收陌生人消息：0不接受、1接受
        flags 0 : *integer
    }

    response {  
        r 0 : integer     
        # 同上
        flags 1 : *integer
    }
    
}

.guildrank {
    id 0 : integer
    name 1 : string
    rank 2 : integer 
    score 3 : integer
}



global_top100_guild 3130 {
    request {
        typ 0 : string
        count 1 : integer
    }

    response {
        r 0:integer
        rankList 1 : *guildrank
        # 你的帮派排名
        rank 2 : integer
        # 你的帮派积分
        score 3 : integer
    }
}

global_top100_team 3131 {
    request {
        typ 0 : string
        count 1 : integer
    }

    response {
        r 0:integer
        rankList 1 : *guildrank
        
    }
}

# 领取月卡年卡
global_pick_card_week 3132 {
    request {
        # 1 月卡、 2 至尊、 3 年卡
        typ 0 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        cardWeekRewards 2:*cardWeekReward(id)
    }
}

global_change_title 3133 {
    request {
        #称号Id
        titleId 0 : string
    }

    response {
        #1:不可装备
        r 0 : integer
        titleId 1 : string
    }
}

global_self_rank 3134 {
    request {
        # power, pve, intimacy
        typ 0 : string
    }

    response {
        # 你的排名
        rank 0 : integer
        # 你的分数
        score 1 : integer
    }
}

global_cdkey_reward 3135 {
    request {
        # cdkey
        cdKey 0 : string
    }
    response {
        # 领取结果 0:成功,1:数据库错误,2:激活码被使用,3:配置错误,4:已领取该类型奖励
        r 0 : integer
		items 1 : *item(id)
    }
}

#玩家改名
global_character_rename 3136 {
    request {
        name 0 : string
        # 1代表使用改名卡 2代表使用500黄金
        type 1 : integer
    } 
    response {
        r 0 : integer    
        name 1 : string
        # 物品数量变化
        items 2 : *item(id)
    }
}

#设置禁书库队伍
global_save_patrol_team 3137 {
    request {
		teamList 0: *integer
    } 
    response {    
		r 0: integer
		teamList 1: *integer
    }
}

#设置私聊的读取时间
global_change_chat_read_time 3138 {
    request {
        #称号Id
        id 0 : string
		time 1: integer
    }

    response {
        #1:不可装备
        r 0 : integer
        recentlyReadChat 1: *recentlyChat(id)
    }
}

global_pandaemonium_title 3139 { #被玩家获得的魔殿显示称号 给山峰亮不亮用
    request {

    }

    response {
        r 0 : integer
		hallids 1 : *string
    }
}

global_get_pandaemonium_info 3140 { #进入魔殿显示的玩家信息
	
	request {
		hallId 0 : string
	}

	response {
		r 0 : integer
		characterInfo 1 : characterinfo
	}

}

global_worship 3141 { # 朝拜魔殿

    request {

    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }

}

global_change_avatar 3142 {
    
    request {
        titleId 0 : string
        avatartype 1 : integer
    }

    response {
        r 0 : integer
    }

}


friend_refresh_all 3201 {
    request {}
    response {
        r 0 : integer
    }
}

friend_request_friend 3202 {
    request {
        # 对方id
        id 0 : integer
    }
    response {
        # 102 对方未到3级
        # 103 对方拒绝添加好友
        r 0 : integer
        friend 1 : friend
    }
}

friend_remove_friend 3203 {
    request {
        # 对方id
        id 0 : integer
    }
    response {
        r 0 : integer
    }
}

friend_add_blacklist 3204 {
    request {
        # 对方id
        id 0 : integer
    }
    response {
        r 0 : integer
    }
}

friend_remove_blacklist 3205 {
    request {
        # 对方id
        id 0 : integer
    }
    response {
        r 0 : integer
    }
}

friend_permit_request 3206 {
    request {
        # 对方id
        id 0 : integer
    }
    response {
        r 0 : integer
    }
}

friend_deny_request 3207 {
    request {
        # 对方id
        id 0 : integer
    }
    response {
        r 0 : integer
    }
}

friend_block_request 3208 {
    request {
        block 0 : boolean
    }

    response {
        r 0 : integer
    }
}

global_get_new_outfit 3501 {

    request {
        outfititemid 0 : string
    }

    response {
        r 0 : integer
        type 1 : integer
        underling 2 : underling
        beauty 3 : beauty
        # 物品数量变化
        items 4 : *item(id)
    }
}

global_wear_underling_outfit 3502 {
    request {
        id  0 : string
        outfitid 1 : string
    }

    response {
        r 0 : integer
        id  1 : string
        curOutfit 2 : string
    }
}

global_wear_wife_outfit 3503 {
    request {
        id  0 : string
        outfitid 1 : string
    }

    response {
        r 0 : integer
        id  1 : string
        curOutfit 2 : string
    }
}

global_exchange_get 3504 {
    request {
        nType  0 : string
        outfititemid 1 : string
    }

    response {
        r 0 : integer
        recordList 1 : *exchangeRecordInfo
        # 物品数量变化
        items 2 : *item(id) 
    }

}


# 连休登录奖励
global_pick_rest_day_reward 3505 {
    request {
        # 领取奖励的第几天
        index 0 : integer
    }
    response {
		# 1 参数不正确, 2 不在活动内, 3 领取天数超过活动上限天数, 4 登录天数不足, 5 已经领取过该天奖励
        r 0 : integer
		# 物品数量变化
        items 1 : *item(id) 
    }
}

global_select_headinfo 3506 {
    request {
        type  0 : integer
        picture 1 : string
        frame 2 :   string
    }

    response {
        r 0 : integer
        headInfo 1 : headInfo
    }

}

global_get_headInfoList 3507 {
    request {
    }

    response {
        r 0 : integer
        headInfoList 1 : *headList
        frameIdList 2 : *frameData
    }
}

# 月初骗钱抽奖
global_month_event_lottery 3508 {
    request {
        # 类型，道具还是金块 1是道具，2是金块
        typ 0 : integer
    }
    response {
		# 1 参数不正确, 2 不在活动内，3 道具或金块不足
        r 0 : integer
		# 物品数量变化
        items 1 : *item(id)
		# 剩余积分
		remainScore 2: integer
    }
}

# 月初骗钱十连抽
global_month_event_lottery_ten_continuous 3509 {
    request {
        # 类型，道具还是金块 1是道具，2是金块
        typ 0 : integer
    }
    response {
		# 1 参数不正确, 2 不在活动内，3 道具或金块不足
        r 0 : integer
		# 物品数量变化
        items 1 : *item(id)
		# 剩余积分
		remainScore 2: integer
		# 抽奖获得的道具
		rewardItemList 3:*item(id)
    }
}

# 月初骗钱每日任务领奖
global_month_event_pick_daily 3510 {
    request {
        # 领奖ID MonthEventTask的ID
        id 0 : integer
    }
    response {
		# 1 参数不正确, 2 不在活动内，3 条件未满足
        r 0 : integer
		# 每日任务的抽奖道具
        items 1 : *item(id)
    }
}

# 月初骗钱积分兑换道具
global_month_event_exchange 3511 {
    request {
        # 兑换的道具id
        id 0 : string
    }
    response {
		# 1 参数不正确, 2 不在活动内，3 条件未满足
        r 0 : integer
		# 每日任务的抽奖道具
        items 1 : *item(id)
		# 剩余积分
		remainScore 2: integer
    }
}

# 获取月初活动抽奖公告历史消息
global_get_month_event_notice 3512 {
    request {
    }
    response {
		# 玩家ID
		playerID 0: integer
		# 玩家名字
		playerName 1: string
		# 道具
		items 2: *item(id)
    }
}

#无限征战出击
global_troopscost_fight 3601 {
    request {
        nStageId  0 : string
    }

    response {
        r 0 : integer
        success 1 : boolean
        troopscost 2 : troopsCostInfo 
        reward 3 : *item
        troopscostmapInfo 4 : troopscostmapInfo
        items 5 : *item(id) 
    }
}
#无限征战获取全力出击消耗
global_troopscost_getfightcost 3602 {
    request {
    }

    response {
        r 0 : integer
        tableCost 1 : *costInfo
    }
}
#无限征战全力出击
global_troopscost_fightforceful 3603 {
    request {
        nStageId  0 : string
    }

    response {
        r 0 : integer
        troopscost 2 : troopsCostInfo 
        reward 3 : *item
        troopscostmapList 4 : *troopscostmapInfo
        items 5 : *item(id) 
    }
}
#无限征战领取阶段奖励
global_troopscost_stagereward 3604 {
    request {
        nId  0 : string #阶段奖励id
    }

    response {
        r 0 : integer
        troopscost 1 : troopsCostInfo 
        items 2 : *item(id) 
    }
}

#获取藏宝图列表
global_troopscost_getmaplist 3605 {
    request {
    }

    response {
        r 0 : integer
        troopscostmapInfo 1 : *troopscostmapInfo 
    }
}

#获取宝箱列表
global_troopscost_getboxlist 3606 {
    request {
    }

    response {
        r 0 : integer
        troopsBoxRewardInfo 1 : *troopsBoxRewardInfo 
    }
}

#挖掘藏宝图
global_troopscost_openmap 3607 {
    request {
        nMapId  0 : string #藏宝图id
        nIndex  1 : integer #格子索引
    }

    response {
        r 0 : integer
        troopscostmapInfo 1 : troopscostmapInfo 
        reward 2 : *item
        items 3 : *item(id) 
        troopscost 4 : troopsCostInfo 
    }
}

#打开宝箱
global_troopscost_openbox 3608 {
    request {
        sBoxId  0 : *string #宝箱id
    }

    response {
        r 0 : integer
        reward 1 : *item
        items 2 : *item(id) 
        troopsBoxRewardInfo 3 : *troopsBoxRewardInfo 
        troopscost 4 : troopsCostInfo 
    }
}

global_get_new_wifeitem 3609 {

    request {
        wifeItemId 0 : string
    }

    response {
        r 0 : integer
        beauty 1 : beauty
        # 物品数量变化
        items 2 : *item(id)
    }
}


# 时装活动领奖
global_hero_outfit_event_pick 3610 {
    request {
        # 领奖ID HeroOutfitEventTask的ID
        id 0 : integer
    }
    response {
		# 1 参数不正确, 2 不在活动内，3 条件未满足
        r 0 : integer
		# 时装任务的道具
        items 1 : *item(id)
    }
}

# 时装活动兑换道具
global_hero_outfit_event_exchange 3611 {
    request {
        # 兑换的道具id
        id 0 : string
    }
    response {
		# 1 参数不正确, 2 不在活动内，3 条件未满足
        r 0 : integer
		# 时装活动的道具
        items 1 : *item(id)
    }
}

# 时装活动兑换银币
global_hero_outfit_event_get_coin 3612 {
    request {
        # 兑换的道具id
        id 0 : string
        count 1 : integer
    }
    response {
		# 1 参数不正确, 2 不在活动内，3 条件未满足
        r 0 : integer
        id 1 : string
        count 2 : integer
		# 时装活动的道具
        items 3 : *item(id)
    }
}

# 4星时装活动领奖
global_rare_outfit_event_pick 3613 {
    request {
        # 领奖ID RareOutfitEventTask的ID
        id 0 : integer
    }
    response {
		# 1 参数不正确, 2 不在活动内，3 条件未满足
        r 0 : integer
		# 时装任务的道具
        items 1 : *item(id)
    }
}

# 4星时装活动兑换道具
global_rare_outfit_event_exchange 3614 {
    request {
        # 兑换的道具id
        id 0 : string
    }
    response {
		# 1 参数不正确, 2 不在活动内，3 条件未满足
        r 0 : integer
		# 时装活动的道具
        items 1 : *item(id)
    }
}

# 4星时装活动兑换银币
global_rare_outfit_event_get_coin 3615 {
    request {
        # 兑换的道具id
        id 0 : string
        count 1 : integer
    }
    response {
		# 1 参数不正确, 2 不在活动内，3 条件未满足
        r 0 : integer
        id 1 : string
        count 2 : integer
		# 时装活动的道具
        items 3 : *item(id)
    }
}

global_get_all_latest_cooperation 3616 {
	
	request {
		id 0 : string 
	}
	
	response {
		r 0 : integer
        cancooperate 1 : *cooperationforlist
    }
	
}

# 兑换分享奖励
global_get_sharereward 3617 {
    request {
        type 0 : integer
        id 1 : string
    }
    response {
		# 1 已领, 2 没有该老婆或部下 3奖励类型错误 4领取类型错误
        r 0 : integer
        id 1 : string
        type 2 : integer
        items 3 : *item(id)
    }
}

# 发送版本奖励信息
global_version_info 3618 {
    request {
        versionid 0 : string
    }
    response {
        r 0 : integer
    }
}

#时装活动道具处理
global_get_outfit_event_item_deal 3619 {
	request {
	}
	response {
		r 0 : integer
		showItems 1 : *item
        items 2 : *item
        nType 3 : string
	}
}

#4星时装活动道具处理
global_get_rare_event_item_deal 3620 {
	request {
	}
	response {
		r 0 : integer
		showItems 1 : *item
        items 2 : *item
        nType 3 : string
	}
}

# 常驻兑换活动兑换时装
global_forever_gift_exchange 3621 {
    request {
        # OutfitShop 的ID
        id 0 : string
    }
    response {
		# 1 参数不正确, 2 不在活动内，3 条件未满足
        r 0 : integer
        id 1 : string
        count 2 : integer
		# 时装活动的道具
        items 3 : *item(id)
    }
}

#魔王计划打卡 领奖励
global_pick_plan_reward 3622 {
	request {
		#想领的id
		id 0 : string  
	}
	response {
		r 0 : integer
		items 1 : *item(id)
	}
}

.titleInfo {
    # 称号id
    id 0 : string
    # 配置中的id
    expiredTime 1 : integer
}


global_get_timeout_titles 3623 {
    request {
	}
	response {
		r 0 : integer
		timeoutTitles 1 : *titleInfo(id)
	}
}

global_gain_timeout_title_reward 3624 {
    request {
       
    }
    response {
        r 0 : integer
        timeoutTitleReward 1 : boolean
        items 2: *item(id)
    }
}

global_calc_bbunlock 3625 {
    request {
       
    }
    response {
        r 0 : integer
        count 1 : integer
    }
}

global_kindred_level_up 3631 {
    request {
        kindredid 0 : string
    }
    response {
        r 0 : integer
        kindred 1 : kindredInfo
        items 2: *item(id)
    }
}

global_kindred_break_level_up 3632 {
    request {
        kindredid 0 : string
        #1 普通物品, 2 品质通用物品
        typ 1 : integer 
    }
    response {
        r 0 : integer
        kindred 1 : kindredInfo
        items 2: *item(id)
    }
}

global_kindred_get 3633 {
    request {
        kindredid 0 : string
    }
    response {
        r 0 : integer
        kindred 1 : kindredInfo
        items 2: *item(id)
    }
}

global_exchange_greenhand_ticket 3634 {
    request {
        confId 0 : string
        wifeId  1 : string
    }
    response {
        r 0 : integer
        items 1 : *item(id)
    }
}

global_kindredshop_get 3635 {
    request {
        id 0 : string
    }
    response {
        r 0 : integer
        id 1 : string
        count 2 : integer
        items 3 : *item(id)
    }
}


global_kindred_open 3636 {
    request {
    }
    response {
        r 0 : integer
        kindredopen 1 : integer
    }
}

global_specialgiftshop_get 3637 {
    request {
        id 0 : string
    }
    response {
        r 0 : integer
        id 1 : string
        count 2 : integer
        items 3 : *item(id)
    }
}

global_use_kindred_item_exchange 3638 {
    request {
        id 0 : string
    }
    response {
        r 0 : integer
        items 1 : *item(id)
    }
}

#魔王等级商店兑换
global_rank_shop_get 3641 {
    request {
        # RankShop 的ID
        id 0 : string
    }
    response {
		# 1 参数不正确, 2 不在活动内，3 条件未满足
        r 0 : integer
        id 1 : string
        items 2 : *item(id)
    }
}

#vip商店兑换
global_vip_shop_get 3642 {
    request {
        # VipShop 的ID
        id 0 : string
    }
    response {
		# 1 参数不正确, 2 不在活动内，3 条件未满足
        r 0 : integer
        id 1 : string
        count 2 : integer
        items 3 : *item(id)
    }
}

#设置气泡框
global_select_bubble 3643 {
    request {
        # item 的气泡框ID
        id 0 : string
    }
    response {
		# 1 参数不正确
        r 0 : integer
    }
}

# 周年庆商店购买
global_anniversary_event_shop_buy 3644 {
    request {
        # 领奖ID AnniversaryEventShop的ID
        id 0 : string
    }
    response {
		# 1 参数不正确, 2,3 不在活动内，4 已经买过了，5 你丫钱不够
        r 0 : integer
		# 时装任务的道具
        items 1 : *item(id)
		# 商店购买列表
		shopList 2: *anniversaryInfo(id)
    }
}

# 周年庆活动兑换道具
global_anniversary_event_exchange 3645 {
    request {
        # 兑换的道具id AnniversaryEventReward
        id 0 : string
    }
    response {
		# 1 参数不正确, 2 不在活动内，3 条件未满足，4 积分不够
        r 0 : integer
		# 玩家身上剩余的活动积分
		myScore 1 : integer
		# 时装活动的道具
        items 2 : *item(id)
		# 领奖列表 	按照AnniversaryEventQuest的ID
		rewardList 3: *string
    }
}

global_guild_rank_user_info 3646 {
    request {
        typ 0 : string
    }

    response {
        r 0:integer
        rankList 1 : *rankcharacter
    }
}

# 新皮肤活动翻开格子
global_new_outfit_event_open_grid 3647 {
    request {
        # 要翻的格子的行和列
        row 0 : string
		column 1 : string
    }
    response {
		# 1 参数不正确,2 不在活动内, 3 格子不存在或者类型不允许 ，4 周围没有已开的格子，5 已开或者已领奖， 6 道具不足
        r 0 : integer
		# 玩家身上剩余的活动积分
		myScore 1 : integer
		# 道具变化
        items 2 : *item(id)
		# 需要刷新的格子数据
		needFreshGridData 3: *newOutfitGridList(rowID)
		maxRow 4 : integer
    }
}

# 新皮肤活动兑换道具
global_new_outfit_event_exchange 3648 {
    request {
        # 兑换的道具id NewOutfitEventReward
        id 0 : string
    }
    response {
		# 1 参数不正确, 2 不在活动内，3 条件未满足，4 积分不够
        r 0 : integer
		# 玩家身上剩余的活动积分
		myScore 1 : integer
		# 新皮肤活动的道具
        items 2 : *item(id)
		# 已领奖列表 	按照NewOutfitEventReward的ID
		rewardList 3: *string
        goldfinger 4 : integer
    }
}

# 新皮肤活动领取奖励
global_get_new_outfit_event_grid_reward 3649 {
    request {
        # 要翻的格子的行和列
        row 0 : string
		column 1 : string
    }
    response {
		# 1 不在活动内, 2 格子不存在或者类型不允许, 3 格子没有开启, 4 类型不是可领奖的类型
        r 0 : integer
		# 新皮肤活动的道具
        items 1 : *item(id)
		# 需要刷新的格子数据
		needFreshGridData 2: *newOutfitGridList(rowID)
		enemyWeakenPct 3 : integer
    }
}

# 新皮肤活动获取格子数据
global_new_outfit_event_grid_data 3650 {
    request {
        # 获取的格子起始行和终止行
        startRow 0 : string
		endRow 1 : string
    }
    response {
		# 1 参数不正确
        r 0 : integer
		# 需要刷新的格子数据
		needFreshGridData 1: *newOutfitGridList(rowID)
    }
}

# 新皮肤活动打boss
global_new_outfit_event_attack_boss 3651 {
    request {
        # 要打的格子的行和列
        row 0 : string
		column 1 : string
		underlingID 2 : string
    }
    response {
		# 1 参数不正确
        r 0 : integer
		# 新皮肤活动的道具
        items 1 : *item(id)
		# 需要刷新的格子数据
		needFreshGridData 2: *newOutfitGridList(rowID)
        #是否炸一排
        bSpeacial 3 : boolean
    }
}

# 新皮肤活动放置敌人
global_new_outfit_event_set_boss 3652 {
    request {
        # 要放置敌人的格子的行和列
        row 0 : string
		column 1 : string
    }
    response {
		# 1 参数不正确
        r 0 : integer
		# 新皮肤活动的道具
        items 1 : *item(id)
		# 需要刷新的格子数据
		needFreshGridData 2: *newOutfitGridList(rowID)
    }
}

.newOutfitOpenInfo {
	columnID 0 : string
	rowID 1 : string
}

.openGridDataList {
    # 开启次数
    openNum 0 : integer
    openInfo 1 : *newOutfitOpenInfo
}

# 新皮肤活动金手指
global_new_outfit_event_open_grid_glodfinger 3653 {
    request {
        # 要放置敌人的格子的行和列
        row 0 : string
		column 1 : string
    }
    response {
		# 1 参数不正确
        r 0 : integer
		# 新皮肤活动的道具
        items 1 : *item(id)
		# 需要刷新的格子数据
		needFreshGridData 2: *newOutfitGridList(rowID)
        # 玩家身上剩余的活动积分
		myScore 3 : integer
		maxRow 4 : integer
        openList 5 : *openGridDataList
    }
}# start guild
# 创建工会
guild_create_new_guild 4001 {
    request {
        name 0 : string
        flag 1 : string
        facebook 2 : string
        declaration 3 : string
        notice 4 : string
        password 5 : string
        # 1 开放随机加入
        publictype 6 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        guild 2 : guild
    }
}

# 完成工会引导标记，global上会有对应参数
guild_register 4002 {
    request {
    }

    response {
        r 0 : integer
    }
}

guild_modify_name 4003 {
    request {
        name 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

guild_modify_flag 4004 {
    request {
        flag 0 : string
    }
    
    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

guild_modify_info 4005 {
    request {
        facebook 0 : string
        declaration 1 : string
        notice 2 : string
        # 1 开放随机加入
        publictype 3 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

guild_transfer_leader 4006 {
    request {
        to 0 : integer
        password 1 : string
    }

    response {
        r 0 : integer
    }
}

guild_find_id 4007 {
    request {
        id 0 : integer
    }

    response {
        guild 0 : guild
    }
}

guild_leave 4008 {
    request {
    }

    response {
        r 0 : integer
    }
}

guild_kick 4009 {
    request {
        # 玩家id
        id 0 : integer
		reason 1 : string
    }

    response {
        r 0 : integer
    }
}

guild_chat 4010 {
    request {
        message 0 : string
    }

    response {
        r 0 : integer
    }
}

# 工会排行榜
guild_rank 4011 {
    request {
    }

    response {
        ranks 0 : *guild
    }
}

guild_get_simple_info 4012 {
    request {
        ids 0 : *integer
    }

    response {
        infos 0 : *guildsimple
    }
}

guild_join 4013 {
    request {
        # 对方工会id
        id 0 : integer
    }

    response {
        r 0 : integer
    }
}

guild_permit_join 4014 {
    request {
        # 玩家id
        id 0 : integer
    }

    response {
        r 0 : integer
    }
}

guild_my_request 4015 {
    request {
    }

    response {
        # 请求的工会id
        ids 0 : *integer
    }
}

guild_guild_requests 4016 {
    request {}

    response {
        r 0 : integer
        requests 1 : *guildrequest
    }
}

guild_deny_join 4017 {
    request {
        # 玩家id
        id 0 : integer
    }

    response {
        r 0 : integer
    }
}

guild_change_authority 4018 {
    request {
        # 会员的玩家id
        id 0 : integer
        # 改变到的权限等级
        authority 1 : integer
    }

    response {
        r 0 : integer
    }
}

guild_build 4019 {
    request {
        # 建设方式配置id
        id 0 : string
    }

    response {
        r 0 : integer
        # 获得的贡献积分
        ccoin 1 : integer
        # 物品数量变化
        items 2 : *item(id)
		#公会每日建造总次数
		gbuildcount 3: integer
    }
}

guild_modify_password 4020 {
    request {
        # 原密码
        old 0 : string
        password 1 : string
    }

    response {
        # 101 原密码不正确
        r 0 : integer
    }
}

# 使用积分购买
guild_buy 4021 {
    request {
        id 0 : string
    }

    response {
        r 0 : integer
        # 贡献积分
        ccoin 1 : integer
        # 物品数量变化
        items 2 : *item(id)
    }
}

guild_pick_task 4022 {
    request {
        index 0 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

guild_task_contribute 4023 {
    request {}

    response {
        # id 为角色id， count为任务次数
        tasks 1 : *item
    }
}

guild_dismiss 4024 {
    request {
        password 0 : string
    }

    response {
        # 110 密码不对
        r 0 : integer
    }
}

guild_random_suggest 4025 {
    request {

    }

    response {
        r 0 : integer
        # 可为空，没有可加入的工会
        gid 1 : integer
    }
}

guild_get_mg_rank 4026 {
    request {
        typ 0 :string
    }

    response {
        score 0 : integer
        rank 1 : integer
    }
}
guild_message 4027 {
    request {
        message 0 : string
    }

    response {
        r 0 : integer
    }
}


#帮派boss列表
guild_boss_list 4028 {
    request {

    }

    response {
        r 0:integer
        #23:00:00-23:59:59以后状态为0，其他时间状态为1
        curState 1 : integer
        #boss信息列表，其中recordList和joiners状态是空的
        bossInfoList 2 : *guildBossInfo
        #玩家出战武将信息
        memberBossInfo 3 : guildMemberBossInfo
    }
}

#点击单个boss信息
guild_boss_info 4029 {
    request {
        confId 0 :string
    }

    response {
        r 0:integer
        #boss信息
        bossInfo 1 : guildBossInfo
    }
}

#进入帮派boss
guild_boss_enter 4030 {
    request {
        #boss配置Id
        confId 0 : string
    }
    response {
        r 0:integer
        #boss信息
        bossInfo 1 : guildBossInfo
        #玩家出战武将信息
        memberBossInfo 2 : guildMemberBossInfo
    }
}

#攻击boss
guild_boss_atk 4031 {
    request {
        confId 0 : string
        underlingId 1 :string
    }
    response {
        r 0:integer
        bossInfo 1 : guildBossInfo
        memberBossInfo 2 : guildMemberBossInfo
        memberBossReward 3 : memberBossReward
        items 4 :*item(id)
    }
}

#开启boss副本（使用帮派财富或钻石）
guild_boss_open 4032 {
    request {
        confId 0 :string
        #1:spend1; 2：spend2
        costType 1 : integer
    }
    response {
        r 0:integer
        bossInfo 1 : guildBossInfo
        items 2 :*item(id)
    }
}

guild_boss_use_item 4033 {
    request {
        underlingId 0 :string
    }
    response {
        r 0:integer
        memberBossInfo 1 : guildMemberBossInfo
        items 2 :*item(id)
    }
}

.guildBossOpenRecord {
    memberName 0: string
    confId 1: string
    costType 2: integer
    openTime 3: integer
    memberId 4 : integer
	actualCost 5 : integer
}

guild_boss_open_record 4034 {
    request {
        
    }
    response {
        r 0:integer
        memberBossInfo 1 : *guildBossOpenRecord
    }
}

guild_buy_guild_gift 4035 {
    request {
        giftID 0:integer
    }
    response {
		# 1 参数错误，2 配置错误，3 公会等级不足，4 玩家贡献不能解锁购买，5 玩家贡献度不足，6 公会财富不够
        r 0:integer
		ccoin 1:integer
		wealth 2:integer
    }
}

guild_get_gift_info 4036 {
    request {
    }
    response {
        r 0  :integer
		giftInfo 1 : *sendGiftInfo(giftID)
    }
}

guild_get_gift_receive_info 4037 {
    request {
		giftID 0 : string
		buyUserID 1 : string
    }
    response {
        r 0  :integer
		receiveUserData 1 : *receiveUserData(userID)
    }
}

guild_election_request 4039 {
	request {
		requestName 0 : string
		nomineeId 1 : string
	}
	response {
		r 0 : integer
	}
}

guild_fresh_guild_data 4040 {
    request {
        id 0 : integer
    }

    response {
		r 0 : integer
        guild 1 : guild
    }
}#温泉结算
.hotSpringResult {
    #温泉模板Id
    configId 0:string
	buffBonus 1:integer
	configBonus 2:integer
	buffUseTime 3:integer
	buffLeftTime 4:integer
	buffAddition 5:integer
    #交涉离开的交涉者Id
	forceId 6:integer
	forceName 7:string
    #格子Id
    cellIndex 8:integer
    startTime 9:integer
    endTime 10:integer
    showWifeId 11:string
	buffid 12 : string
}

#交涉失败者信息
.fightplayer {
    id 0:integer
    time 1:integer
}

#温泉离开时间
.playerLeftInfo {
    id 0:integer
    time 1:integer
}

#温泉信息
.hotSpringInfo {
	id 0:integer
    cellIndex 1:integer
	configId 2:string
	startTime 3:integer
	endTime 4:integer
	buffAddition 5:integer
	buffStartTime 6:integer
	buffContinueTime 7:integer
	showWifeId 8:string
	fightPlayers 9:*fightplayer  
    charm 10:integer
    intimacy 11:integer
    canFight 12:boolean
    name 13:string
    protectedFinish 14:integer
    playerLeftTime 15:*playerLeftInfo
    curOutfit 16: string
	buffid 17 : string
}

#温泉列表简单信息
.hotSpringSimpleInfo {     
    id 0:integer
    cellIndex 1:integer
	configId 2:string
	startTime 3:integer
	endTime 4:integer
    showWifeId 5:string
    canFight 6:boolean
    name 7:string
    protectedFinish 8:integer
    playerLeftTime 9:*playerLeftInfo
    curOutfit 10: string
}



# 基础信息
hotspring_info 2601 {
    request {
        
    }
    response {
        r 0 : integer
        selfInfo 1: *hotSpringInfo
    }
}

hotspring_list 2602 {
    request {
        configId 0:string
    }
    response {
        r 0 : integer
        hotspringList 1: *hotSpringSimpleInfo
    }
}

#进入温泉
hotspring_enter 2603 {
    request {
        #配置id
        configId 0:string
        #格子位置
        cellIndex 1:integer
        #使用物品
        itemId 2:string
        #使用数量
        itemCount 3:integer
        #温泉门票
        ticketItem 4:string
    }
    response {
        #结果
        r 0 : integer
        #格子更新
        selfInfo 1: hotSpringInfo
        #自身结算
        selfResult 2 : hotSpringResult
        #物品更新
        items 3:*item(id)
    }

}

#离开温泉
hotspring_leave 2604 {
    request {
        configId 0:string
        cellIndex 1:integer
    }
    response {
        #消息结果
        r 0:integer
        #结算结果
        mail 1:hotSpringResult
        #获得奖励更新
        items 2:*item(id)
    }

}

#交涉操作
hotspring_kick_target 2605 {
    request {
        configId 0:string
        cellIndex 1:integer
    }
    response {
        #交涉结果，0，为成功，2~5：其他情况
        r 0:integer
        #自身结算
        selfResult 1 : hotSpringResult
        #当前信息
        selfInfo 2:hotSpringInfo
        #奖励信息
        items 3:*item
        #交涉结果1为失败
        fail 4:integer
    }
}

#使用沐浴剂
hotspring_use_buff 2606 {
    request {
        itemId 0:string
        itemCount 1:integer
    }
    response {
        r 0 : integer
        #更新的buff信息
        selfInfo 1: hotSpringInfo
    }
}

#显示一个格子
hotspring_show 2607 {
    request {
        #配置id
        configId 0:string
        #格子位置
        cellIndex 1:integer
    }
    response {
        #结果
        r 0 : integer
        #格子信息
        hotspringInfo 1: hotSpringInfo
    }

}
#福袋记录数据
.luckybagRecordInfo {
    time 0:integer
    rewards 1: *item(id)
}

luckybag_draw_lottery 7201 {	
	request {
		count 0 : integer
	}
	
	response {
		r 0 : integer
		count 1 : integer
		rewards 2 : *item(id)
		itemList 3 : *item(id)
		# 物品数量变化
        items 4 : *item(id)
	}	
}


luckybag_get_lottery_record 7202 {
	request {
	}
	
	response {
		r 0 : integer
		record 1 : *luckybagRecordInfo
	}	
}

luckybag_dailygift_get 7203 {
	request {
		id 0 : string
	}
	
	response {
		r 0 : integer
		# 物品数量变化
        items 1 : *item(id)
		giftInfo 2 : item
	}	
}

luckybag_get_score_reward 7204 {
	request {
		id 0 : string
	}

	response {
		r 0 : string
		# 物品数量变化
        items 1 : *item(id)
	}	
}

luckybag_get_task_reward 7205 {
	request {
		id 0 : string
	}

	response {
		r 0 : string
		# 物品数量变化
        items 1 : *item(id)
		taskList 2 : *luckybagTaskinfo(id)
	}	
}

luckybag_get_item_reward 7206 {
    request {
	}

	response {
		r 0 : string
        itemList 1 : *item(id)
		# 物品数量变化
        items 2 : *item(id)
	}	
}





#皇陵主界面信息
#
mausoleum_mausoleum_info 2801 {
    request {

    }
    response {
        r 0:integer
        #gridInfo中没有gridRecord和bossLeftHp字段
        simpleGridList 1 : *gridInfo(id)
        #没有underlings字段
        playerMausoleumInfo 2 : mausoleumPlayerInfo
    }
}

#打开一个格子
mausoleum_open_tile 2802 {
    request {
        #格子Id
        tileId 0 : integer
    }
    response {
        r 0:integer
        gridInfo 1 : gridInfo
        items 2 : *item(id)
    }

}

#进入格子boss
mausoleum_enter_tile_boss 2803 {
    request {
        tileId 0 : integer
    }
    response {
        r 0:integer
        gridInfo 1 : gridInfo
        playerMausoleumInfo 2 : mausoleumPlayerInfo
        items 3 : *item(id)
    }

}

#攻击格子boss
mausoleum_atk_tile_boss 2804 {
    request {
        tileId 0 : integer
        #使用武将id
        underlingId 1 : string
    }
    response {
        r 0:integer
        gridInfo 1 : gridInfo
        playerMausoleumInfo 2 : mausoleumPlayerInfo
        hitScore 3 : integer
        killScore 4 :integer
        realAtk 5 :integer
        items 6 : *item(id)
    }
}

#打开格子宝箱
mausoleum_unlock_tile_box 2805 {
    request {
        tileId 0 : integer
    }
    response {
        r 0:integer
        gridInfo 1 : gridInfo
        #物品更新
        items 2 : *item(id)
    }
}

#购买资源商店
mausoleum_buy_resource_item 2806 {
    request {
        goodsId 0 : string
        buyCount 1 : integer
    }
    response {
        r 0:integer
        items 2 : *item(id)
    }
}

#购买积分商店
mausoleum_buy_score_item 2807 {
    request {
        goodsId 0 : string
    }
    response {
        r 0:integer
        items 2 : *item(id)
    }
}

#使用出战令
mausoleum_use_drug 2808 {
    request {
        underlingId 0 : string
    }
    response {
        r 0:integer
        items 2 : *item(id)
    }
}



# minigame
# 
# 打警察
minigame_mg1_shoot 3301 {
    request {
        uid 0 : integer
    }

    response {
        r 0 : integer
        mg1 1 : mg1
        # 暴击
         crit 2 : integer
         # 奖励物品
        items 3 : *item(id)
    }
}



# 购买增加次数物品
minigame_buy_game_item 3302 {
    request {
        id 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

minigame_use_game_item 3303 {
    request {
        id 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        # 对应效果变化值，mg1为bullet
        value 2 : integer
    }
}

# 使用积分购买物品
minigame_buy_credit_item 3304 {
    request {
        id 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        credit 2 : integer
    }
}

# 小游戏全服得分获取
minigame_get_server_point 3305 {
    request {
        # mg1 --> mgN
        typ 0 : string
    }

    response {
        score 0 : integer
    }
}

# 小游戏工会得分, 排名
minigame_get_guild_rank 3306 {
    request {
        # mg1 --> mgN
        typ 0 : string
    }

    response {
        score 0 : integer
        rank 1 : integer
    }
}

# 获取成就
minigame_pick_achievement 3307 {
    request {
        # mg1 --> mgN
        typ 0 : string

        id 1 : string
    }

    response {
        r 0 : integer
        achievements 1 : *item(id)
        # 物品数量变化
        items 2 : *item(id)
    }
}

minigame_mg2_operate 3308 {
    request {
        # 使用的物品
        itemid 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        score 2 : integer
        credit 3 : integer
    }
}
minigame_mg3_operate 3309 {
    request {
        itemid 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        mg3 2 : mg3
    }
}

# 升级桌子
minigame_mg3_upgrade 3310 {
    request {
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        mg3 2 : mg3
    }
}

# 小游戏多类型全服得分获取
minigame_get_multi_server_point 3311 {
    request {
        # mg3\4\5
        typ 0 : string
    }

    response {
        scores 0 : *item(id)
    }
}


minigame_mg4_operate 3312 {
    request {
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        mg4 2 : mg3
        # 数组用于转到 mini4_double，取第一项看转到了什么
        orders 3 : *string
        #宝箱奖励
        boxRewards 4: *item(id)
    }
}

# 升级转盘
minigame_mg4_upgrade 3313 {
    request {
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        mg4 2 : mg3
    }
}

minigame_mg2_operate_summon 3314{
    request {
        useType 0 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        mg2 2 : mg2
    }
}

minigame_mg2_operate_change 3315{
    request {
        useType 0 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        mg2 2 : mg2
    }
}

minigame_mg2_operate_gain 3316{
    request {
        
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        mg2 2 : mg2
    }
}


minigame_mg1_stop_fever 3317 {
    request {
    }

    response {
        r 0 : integer
        mg1 1 : mg1
    }
}


minigame_mg1_item_fever 3318 {
    request {
    }

    response {
        r 0 : integer
        mg1 1 : mg1
		# 物品数量变化
        items 2 : *item(id)	
    }
}

minigame_mg5_operate 3319 {
    request {
        itemid 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        mg5 2 : mg5
    }
}

minigame_mg6_operate 3320 {
    request {
        itemid 0 : string
		count 1 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        mg6 2 : mg6
		itemChangeList 3 : *item
    }
}


minigame_mg7_operate 3321 {
    request {
        itemid 0 : string
		count 1 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        mg7 2 : mg7
		itemChangeList 3 : *item
    }
}


.navigationSimpleTeam {
    #
    id 0 : integer
    teamName 1 : string
    needAttack 2 : integer
    acceptType 3 : integer
    curMemberCount 4 : integer
    leaderName 5 : string
    totalAttack 6 : integer
    teamDesc 7 : string
    dailyEnterCount 8 : integer
    leaderTitle 9 : string
    leaderAllTitles 10 : *string
}



navigation_team_list 2701 {
    request {

    }

    response {
        r 0:integer
        teamList 1 : *navigationSimpleTeam
    }
}

navigation_request_team 2702 {
    request {
        leaderId 0:integer
    }

    response {
        #只返回加入结果，不返回舰队信息
        r 0:integer
    }
}


navigation_create_team 2703 {
    request {
        name 0:string
        needAttack 1:integer
        acceptType 2:integer
        teamDesc 3:string
    }

    response {
        #和Request一样，通过sync更新team信息
        r 0:integer
    }
}



navigation_team_info 2704 {
    request {

    }

    response {
        r 0:integer
        teamInfo 1 : navigationTeam
    }
}

#离开队伍
navigation_exit_team 2705 {
    request {

    }

    response {
        r 0:integer
    }
}

#踢出成员
navigation_kick_member 2706 {
    request {
        memberId 0:integer
    }
    response {
        r 0:integer
    }
}

#解散队伍
navigation_dismiss_team 2707 {
    request {

    }
    response {
        r 0:integer
    }
}

navigation_enter_navigation 2708 {
    request {
        #玩家选择的areaId
        areaId 0 :string
        joinHeros 1: *string
    }
    response {
        r 0:integer
        info 1: navigationInfo
    }
}

navigation_start_navigation 2709 {
    request { 
        force 0:integer
    }
    response {
        r 0:integer
        info 1: navigationInfo
		zoneInfo 2 : zoneInfo
		items 3 : *item(id)
    }
}

navigation_option_self_event 2710 {
    request {

    }
    response {
        r 0:integer
        info 1: navigationInfo
        addScore 2:integer
        showItems 3:*item
        items 4 :*item(id)
        addTeamScore 5:integer
        multi 6:integer
		progressInc 7 : integer
    }
}


navigation_option_team_event 2711 {
    request {
        targetId 0:integer
        #用于校验事件是否还存在
        uuid 1:integer
    }
    response {
        r 0:integer
        info 1: navigationInfo
        addScore 2:integer
        showItems 3:*item
        items 4 :*item(id)
        addTeamScore 5:integer
        multi 6:integer
    }
}


navigation_option_share_event 2712 {
    request {

    }
    response {
        r 0:integer
        #如果有更新说明分享成功了
        info 1: navigationInfo
    }
}


navigation_open_box 2713 {
    request {
        boxId 0:string
        #批量打开
        multiOpen 1:integer
        openInRoomFlag 2: integer
    }
    response {
        r 0:integer
        silverBoxList 1:*integer
        goldBoxList 2:*integer
        items 3:*item(id)
    }
}


navigation_show_record 2714 {
    request {

    }
    response {
        r 0:integer
        recordList 1: *navigationRecord
    }
}

.NavigationAreaInfo {
    areaId 0:string
    winnerKill 1:integer
    winnerMembers 2:*string
    winnerTeamName 3:string
}

navigation_navigation_info 2715 {
    request {

    }
    response {
        r 0:integer
        openAreas 1:*NavigationAreaInfo
        leaderId 2:integer
        #id:areaId, count:boatCount
        #用于检测区域是否开启
        boatRecord 3:*item
        gainAreas 4:*string
        info 5: navigationInfo
        showItems 6: *item(id)
        #用于显示总击杀船数
        boatTotalRecord 7:*item
    }
}

navigation_box_room_info 2716 {
    request {

    }
    response {
        r 0:integer
        silverBoxList 1:*integer
        goldBoxList 2:*integer
        oldSliverBoxCount 3 : integer
        oldGoldBoxCount 4: integer
    }
}


navigation_accept_request 2717 {
    request {
        leaderId 0: integer
        memberId 1: integer
    }

    response {
        r 0:integer
        #组队信息同步过来
    }

}


navigation_send_reguest_request 2718 {
    request {
        channel 0 : integer
        targetId 1 : integer
    }
    #只回复结果，其他的更新在聊天协议里
    response {
        r 0 :integer

    }

}
# 购买增加次数物品
navigation_buy_game_item 2719 {
    request {
        id 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

navigation_use_game_item 2720 {
    request {
        id 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        # 对应效果变化值
        value 2 : integer
    }
}


# 获取成就
navigation_pick_achievement 2721 {
    request {
        # navigation...
        typ 0 : string

        id 1 : string
    }

    response {
        r 0 : integer
        achievements 1 : *item(id)
        # 物品数量变化
        items 2 : *item(id)
    }
}

# 选择武将
navigation_select_hero 2722 {
    request {
        # navigation...
        joinHeros 2: *string
    }

    response {
        r 0 : integer
        info 1: navigationInfo
    }
}

# 修改加入类型
navigation_change_accepttype 2723 {
    request {
        # navigation...
        acceptType 0: integer
    }

    response {
        r 0 : integer
        teamInfo 1:navigationTeam
    }
}


navigation_reject_request 2724 {
    request {
        memberId 0: integer
    }

    response {
        r 0:integer
        #组队信息同步过来
    }

}

# 小组队活动类型全服得分获取
navigation_get_multi_server_point 2725  {
    request {
        # navigation
        typ 0 : string
    }

    response {
        scores 0 : *item(id)
    }
}

navigation_gain_team_bonus 2726 {
        request {
    }

    response {
        showItems 0 : *item(id)
        # 物品数量变化
        items 2 : *item(id)
    }
}

navigation_open_boss_instance_zone 2727 {
	request {
		memberId 0 : integer
		areaId 1 : string
	}
	
	response {
		r 0 : integer
		zoneInfo 1 : zoneInfo
	}
}

navigation_invite_team 2728 {
	request {
		leaderId 0 : integer
		areaId 1 : string
		bossUid 2 : string
	}
	response {
		r 0 : integer
	}
}

navigation_deal_invite 2729 {
	request {
		leaderId 0 : integer
		areaId 1 : string
		bossUid 2 : string
		operation 3 : string #接受 accept 
	}
	response {
		r 0 : integer
	}
}

.invitingInfo {
	teamLeader 0 : integer
	teamName 1 : string
	leaderName 2 : string
	totalAtk 3 : integer
	state 4 : string
}

navigation_get_inviting_list 2730 {

	request {
		leaderId 0 : integer
		areaId 1 : string
		bossUid 2 : string
	}
	response {
		r 0 : integer
		list 1 : *invitingInfo(teamLeader)
	}
}

.dealListInfo {
	bossUid 0 : string
	areaId 1 : string
	state 2 : string
	leaderName 3 : string
	deadlineTime 4 : integer
	hpPer 5 : integer
}

navigation_get_invite_deal_list 2731 {
	request {
		leaderId 0 : integer
	}
	response {
		r 0 : integer
		list 1 : *dealListInfo(bossUid)
	}
}

navigation_atk_boss 2732 {
	request {
		memberId 0 : integer
		bossUid 1 : string
		areaId 2 : string
	}
	response {
		r 0 : integer
		items 1 :*item(id)
		zoneInfo 2 : zoneInfo
		score 3 : integer
		damage 4 : integer
		selfReward 5 : *item(id)
	}
}

navigation_enter_zone 2733 {
	request {
		teamLeader 0 : integer
		areaId 1 : string
		bossUid 2 : string
	}
	response {
		r 0 : integer
		zoneInfo 1 : zoneInfo
	}
}

navigation_use_progress_item 2734 {
	request {
		areaId 1 : string
		itemId 2 : string
	}
	response {
		r 0 : integer
		areaZone 1 : areaZonesInfo
		items 2 :*item(id)
	}
}

# 生产一次对应id的物品
office_product 2101 {
    request {
        id 0 : string
    }

    response {
        # 1 次数不足
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        # 生产线变化
        product 2 : product
    }
}

# 进行一次公务
office_business 2102 {
    request {
        # 是否选择经验
        exp 0 : boolean
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        business 2 : business
    }
}

# 使用生产恢复道具
office_product_recovery 2103 {
    request {
        id 0 : string
        # 使用数量
        count 1 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        # 生产线变化
        product 2 : product
    }
}

# 使用生产恢复道具
office_business_recovery 2104 {
    request {
        count 0 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        # 生产线变化
        business 2 : business
    }
}

office_one_click_product 2105 {
    request {
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        # 生产线变化
        products 2 : *product(id)
    }
}

party_show_all_rooms 8001 {
	
	request {

	}
	
	response {
		r 0 : integer
		startedRooms 1 : *startedRoomInfo
	}
	
}

party_set_up_room 8002 {
	
	request {
		roomType 0 : string
	}
	
	response {
		r 0 : integer
		room 1 : roomInfo
		items 2 : *item(id)
	}
	
}

party_use_party_protect 8003 {
	
	request {
		partyProtectId 0 : string
	}
	
	response {
		r 0 : integer
		room 1 : roomInfo
		items 2 : *item(id)
	}
	
}

party_let_party_start 8004 {
	
	request {
		
	}
	
	response {
		r 0 : integer
		room 1 : roomInfo
	}
	
}

party_join_room 8005 {
	
	request {
		roomId 0 : string
		positionIndex 1 : integer
	}
	
	response {
		r 0 : integer
		room 1 : roomInfo
	}
	
}

party_one_on_one_fight 8006 {

	request {
		defenderId 0 : string
		roomId 1 : string
	}
	
	response {
		r 0 : integer
		room 1 : roomInfo
		fightResult 2 : *fightResult
		continueTime 3 : integer
		manaPoint 4 : integer
		oldRoom 5 : roomInfo
	}
	
}

party_get_room_info 8007 {
	request {
		roomId 0 : string
	}
	response {
		r 0 : integer
		room 1 : roomInfo
	}
}

party_invite_to_party 8008 {
	request {
		invitedPlayerId 0 : integer
	}
	response {
		r 0 : integer
	}
}

party_leave_room_and_reward 8009 {
	request {
		roomId 0 : string 
	}
	response {
		r 0 : integer
		continueTime 1 : integer
		manaPoint 2 : integer
		items 3 : *item(id)
	}
	
}

party_change_room 8010 {
	request {
		curRoomId 0 : string
		newRoomId 1 : string
		positionIndex 2 : integer
	}
	response {
		r 0 : integer
		continueTime 1 : integer
		manaPoint 2 : integer
		oldRoom 3 : roomInfo
		newRoom 4 : roomInfo
		items 5 : *item(id)
	}
}

party_invite_check 8011 {
	request {
		roomId 0 : string
	}
	response {
		r 0 : integer
		flag 1 : boolean
	}
}
# 战斗
pve_fight 2301 {
    request {
        # boss战中派出的手下id，普通战斗中可以不传
        underlingid 0 : string
        # 使用巨炮
        cannon 1 : boolean
        #测试推关
        gm 2:boolean
    }

    response {
        r 0 : integer
        success 1 : boolean
        pve 2 : pve
        # 物品数量变化
        items 3 : *item(id)
        #奖励wife
        beauty 4:beauty
    }
}

# 领取章节奖励
pve_collect_chapter_reward 2302 {
    request {
        # 章节id
        chapter 0 : integer
    }

    response {
        r 0 : integer
        pve 1 : pve
        # 物品数量变化
        items 2 : *item(id)
    }
}

# 使用道具移除BOSS战斗过状态
pve_remove_boss_status 2303 {
    request {
        # boss战中派出的手下id，普通战斗中可以不传
        underlingid 0 : string
        # 0 普通打BOSS 1 单人打BOSS 2 合作打BOSS
        typ 1 : integer
    }

    response {
        r 0 : integer
        pve 1 : pve
        # 物品数量变化
        items 2 : *item(id)
    }
}

# 完成主线任务
pve_trunk 2304 {
    request {
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 2 : *item(id)
        # 任务及统计同步
        tasks 3 : tasks
    }
}

# 请求升级
pve_upgrade_level 2305 {
    request {

    }

    response {
        r 0 : integer
        level 1 : integer
    }
}

# 拷问
pve_torture 2306 {
    request {
        # 拷问对象
        id 0 : string
        # 使用道具
        item 1 : boolean

        count 2 : integer
    }

    response {
        r 0 : integer
        hostage 1 : hostage
        # 物品数量变化
        items 2 : *item(id)
        # 奖励列表
        rewardsList 3 : *rewardsInfo
    }
}

# 开始健身
pve_bodybuilding 2307 {
    request {
        # 放置到健身房中的手下id
        id 0 : string
    }

    response {
        r 0 : integer
        # 结束时间
        finish 1 : integer
        extra 2 :integer
    }
}

# 收获健身奖励
pve_collect_bb 2308 {
    request {
        # 放置到健身房中的手下id
        id 0 : string
    }

    response {
        r 0 : integer
        # 手下属性
        underling 1 : underling
		buffEffect 2 : integer
		items 3 : *item(id)
    }
}

# 扩展健身房槽位
pve_expand_bb 2309 {
    request {

    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

# 拾取每日奖励
pve_pick_daily 2310 {
    request {
        id 0 : string
    }

    response {
       r 0 : integer
       # 物品数量变化
       items 1 : *item(id)
    }
}

# 拾取活跃奖励
pve_pick_activity 2311 {
    request {
        id 0 : string
    }

    response {
       r 0 : integer
       # 物品数量变化
       items 1 : *item(id)
       # 活跃奖励变化
       activities 2 : *string
    }
}

# 个人BOSS
pve_single_boss 2312 {
    request {
        # 手下id
        underlingid 0 : string
        # 是否暴击
        crit 1 : boolean
    }

    response {
        # 101 活动未开始
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        # 个人BOSS当前状态
        singleboss 2 : singleboss
        # BOSS分数，用于排行
        sb 3 : integer
    }
}

pve_coop_boss 2313 {
    request {
        # 手下id
        underlingid 0 : string
    }

    response {
        # 101 活动未开始
        # 102 活动已经结束
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        # 合作BOSS当前状态
        coopboss 2 : coopboss
        # BOSS分数，用于排行
        sb 3 : integer
        # 伤害数
        atk 4 : integer
        #总伤害数
        totalDamage 5 : integer

    }
}

pve_boss_shop_buy 2314 {
    request {
        # 购买的id，见highwayShop表
        id 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

pve_coop_boss_hp 2315 {
    request {

    }

    response {
        # 数值为 当前hp / 最大hp * 10000
        # 当界面打开并且是在战斗中每30s（暂定）发包同步
        hp 0 : integer
    }
}

.cannonupgraderecord {
    # 升级是否成功
    success 0 : boolean
    orilevel 1 : integer
    # 如果失败没有本值
    newlevel 2 : integer
}

# 升级巨炮
pve_upgrade_cannon 2316 {
    request {
        # 使用的金币数
        count 0 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        # 加农炮
        cannon 2 : cannon
        # 升级记录
        records 3 : *cannonupgraderecord
    }
}


.bossrank {
    id 0 : integer
    name 1 : string
    # 排名
    rank 2 : integer
    
    # 积分
    SB 3 : integer

    title 4:string
    allTitles 5:*string
    # 工会id
    gid 6 : integer
    # 工会名
    gname 7 : string
}

pve_score_rank 2317 {
    request {}

    response {
        ranks 0 : *rankcharacter
        # 你的排名数据 0 代表未排名
        your 1 : integer
    }
}

.killrecord {
    id 0 : integer
    name 1 : string
    time 2 : integer
    guild 3 : string
}

pve_kill_record 2318 {
    request {}

    response {
        records 0 : *killrecord
    }
}

pve_pick_achievement 2319 {
    request {
        id 0 : string
    }

    response {
        r 0 : integer
        achievements 1 : *item(id)
        # 物品数量变化
        items 2 : *item(id)
    }
}

pve_sync_guide 2320 {
    request {
        id 0 : string
    }

    response {
        r 0 : integer
        guide 1 : string
    }
}

pve_pick_tlt 2321 {
    request {
        # TLTGroup 表 TLTID列
        id 0 : string
        # 级别
        index 1 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}

pve_gain_coop_reward 2322 {
    request {

    }

    response {
        r 0 : integer
        #更新领取状态
        hasGain 1 : boolean
        #自身排名
        selfRank 2 : integer
        # 物品数量变化
        items 3 : *item(id)


    }
}

pve_enter_coop 2323 {
    request {

    }

    response {
        status 0 : integer
        hp 1 : integer
        #top排名
        ranks 2 : *rankcharacter
        #总伤害
        totalDamage 3 : integer
        #当前Boss累积积分
        actScore 4 : integer
        bossLevel 5:integer
    }
}

pve_leave_coop 2324 {
    request {

    }

    response {
        status 0 : integer
        hp 1 : integer
    }
}

pve_coop_damage_rank 2325 {
    request {
    }

    response {
        # 前100
        ranks 0 : *rankcharacter
        # 你的排名
        rank 1 : integer
        # 上次击杀
        records 2 : killrecord

    }

}

pve_boss_status 2326 {
    request {

    }
    response {
        # 状态
        r 0 : integer
        # 合作BOSS当前hp
        coopHp 1:integer
        # 合作BOSS当前状态
        coopStatus 2:integer
        bossLevel 3:integer
    }

}

# 快速战斗
pve_fast_fight 2327 {
    request {
    }

    response {
		# 201:配置错误 202:vip等级不足 203:完成章节不够自动战斗
        r 0 : integer
        success 1 : boolean
        pve 2 : pve
        # 物品数量变化
        items 3 : *item(id)
        #奖励wife
        beauty 4:beauty
    }
}

pve_need_hp 2328 {
	request {
		
	}
	
	response {
		r 0 : integer
		needhp 1 : integer
	}
}

# 派出属下参加悬赏
pve_dispatch_underling_to_reign_quest 2329 {
	request {
		# 派出到的任务
		questID 0 : string
		# 希望派出的属下列表
		underlingList 1 : *string
	}
	
	response {
		r 0 : integer
		# 本周已派出的属下列表
		reignQuestUnderlingList 1 : *string
		items 2 : *item(id)
	}
}

pve_reign_quest_exchange 2330 {
    request {
        id 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 2 : *item(id)
		reignQuestShopData 3 : *reignQuestShopData(shopID)
    }
}

# 请求悬赏任务
pve_get_reign_quest_data 2331 {
    request {
    }
	response {
		r 0 : integer
		reignQuestDataList 1 : reignQuestDataList
	}
}# PVP start
# 竞技场注册
pvp_areana_register 3001 {
    request {

    }

    response {
        r 0 : integer
        areana 1 : areana
    }
}

pvp_areana_top100 3002 {
    request {

    }

    response {
        # 前一百的人
        ranks 0 : *areanacharacter
        # 你的排名
        rank 1 : integer
        score 2 : integer
    }
}

# 竞技场匹配
pvp_areana_match 3003 {
    request {

    }

    response {
        # 101 无法匹配，没有其他玩家
        r 0 : integer
        areana 1 : areana
        # 物品数量变化
        items 2 : *item(id)
    }
}

# 选择buff
pvp_areana_select_buff 3004 {
    request {
        # 选择应用哪个buff,索引从1开始
        index 0 : integer
    }

    response {
        r 0 : integer
        areana 1 : areana
        items 2 : *item(id)
    }
}

.fightunderling {
    # 手下id
    id 0 : string
    # 当前hp，为0说明死了
    hp 1 : integer
}

.fightcontext {
    # 敌方本回合结束数值
    enemy 0 : fightunderling
    # 我方本回合结束数值
    mine 1 : fightunderling
    # 敌人是否暴击
    enemycrit 2 : boolean
    # 我是否暴击
    minecrit 3 : boolean
    # 是否先手
    offensive 4 : boolean
}

# 竞技场战斗
pvp_areana_fight 3005 {
    request {
        # 选择的对手selecteds中,索引从1开始
        index 0 : integer
    }

    response {
        r 0 : integer
        # 战斗数据
        contexts 1 : *fightcontext
        areana 2 : areana
        # 物品数量变化
        items 3 : *item(id)
        # 是否结束
        finish 4 : boolean
        # 完结后手下数据更新
        underling 5 : underling
        # 3胜抽奖结果,有本值有抽奖
        beat3reward 6 : item
		fightRewardList 7 : *item(id)
		reignbuffeffect 8 : boolean
		reignbuff 9 : reignbuffinfo
    }
}

# 竞技场20杀以上记录
pvp_areana_messages 3006 {
    request {

    }

    response {
        messages 0 : *areanamessage
    }
}

# 挑战、复仇、追杀
pvp_revenge_chase 3007 {
    request {
        # 复仇时为邮件id，其他时为玩家id
        target 0 : string
        # 派出的手下
        underlingid 1 : string
        # 类型挑战AC : 3、复仇AC : 4、追杀AH : 5
        type 2 : integer
    }

    response {
        # 101 无法匹配，没有其他玩家
        r 0 : integer
        areana 1 : areana
        items 2: *item(id)
    }
}

pvp_revenge_character 3008 {
    request {
        id 0 : integer
    }

    response { 
        character 0 : areanarevengecharacter
    }
}

#选择普通竞技场出战武将（3选1）
pvp_select_underling 3009 {
    #选择index
    request {
        #普通选择index不和指定武将同时存在
        index 0 : integer
        #指定武将的Id，默认是0
        underlingid 1 : string
    }
    response {
        r 0 : integer
        areana 1 : areana
        #(也不一定会有的)物品变化
        items 2 : *item(id)
    }
}

pvp_fast_fight 3010 {
    #buff选择index
    request {
        index 0 : integer #当前回合buff选择
        buffindex 1 : integer #后续回合buff选择
    }

    response { 
        # 1 vip等级不够 2魔王等級不够 3结束时间错误 4竞技失败
        r 0 : integer
        # 战斗数据
        areana 1 : areana
        # 物品数量变化
        items 2 : *item(id)
        # 完结后手下数据更新
        underling 3 : underling
        # 花费buff次数(id是buff的index,count次数)
        costbuff 4 : item
        # 3胜抽奖结果,有本子有抽奖
        rewardlist 5 : *item(id)
        myscore 6 : integer
        enemyscore 7 :integer
        wincount 8 : integer
        allbeat 9 : boolean
        mine 10 : areanaunderling
		# 领地buff触发次数
		reignbuff 11 : reignbuffinfo
    }
}
rankbonus_get_task_reward 7301{
	request {
		id 0 : string
	}
	
	response {
		r 0: string
		# 物品数量变化
		items 1 : *item(id)
		taskList 2 : *rankbonusTaskinfo(id)
	}
}

rankbonus_shop_buy 7302 {
	request {
		id 0 : string
	}
	
	response {
		r 0 : integer
		# 物品数量变化
		items 1 : *item(id)
		giftInfo 2 : *item(id)
	}
}

rankbonus_shop_exchange 7303 {
	request { 
		id 0 : string
	}
	
	response {
		r 0 : integer
		itemList 1 : *item(id)
		# 物品数量变化
		items 2 : *item(id)
	}
}


#颁发许可
reign_set_status 7001 {
    request {
        reignid 0 : string
        list 1 : *statuslist
    }

    response {
        r 0 : integer
    }
}

#领取buff
reign_get_buff 7002 {
    request {
        reignid 0 : string
    }

    response {
        r 0 : integer
        buffid 1 : string
    }
}

#赠送资源
reign_worship 7003 {
    request {
        reignid 0 : string
    }

    response {
        r 0 : integer
        items 11 : *item(id)
    }
}

#获取领地活动 
reign_random_event 7004 {
    request {
        reignid 0 : string
    }

    response {
        r 0 : integer
        eventid 1 : string
    } 
}

#进行领地活动
reign_do_event 7005 {
    request {
        reignid 0 : string
        index 1  : integer
    }

    response {
        r 0 : integer
        index 1  : integer
        items 2 : *item(id)
        eventtime 3 : integer
        value  4 : integer #活跃值
    }
}


#领取活跃奖励
reign_get_reward 7006 {
    request {
        id 0 : string
    }

    response {
        r 0 : integer
        items 1 : *item(id)
    }
}

#设置领主旗帜
reign_set_flag 7007 {
    request {
        flag 0 : string
        emblem 1 : *string
    }

    response {
        r 0 : integer
    }
}

#获取领主列表
reign_get_leadlist 7008 {
    request {

    }
    response {
        r 0 :integer
        ranks 1: *rankcharacter
    }
}

#获取政务记录
reign_get_leadrecord 7009 {
    request {
    }
    response {
        r 0 :integer
        recordlist 1 : *recordInfo
    }
}

#获取领主活跃值
reign_get_active_value 7010 {
    request {
    }
    response {
        r 0 :integer
        value 1 : integer
    }
}

#获取本服活跃公会列表
reign_get_guild_list 7011 {
    request {
        reignid 0 : string
    }
    response {
        guildlist 0 : *integer
    }
}

#领取buff
reign_get_all_buff 7012 {
    request {
        reignIds 0 : *string
    }

    response {
        r 0 : integer
        buffids 1 : *string
    }
}
.cellReward {
	id 0 : string
	count 1 : integer
	cellType 2 : string
	redouble 3 : integer
	score 4 : integer
	isScoreCell 5 : integer
	rewardType 6 : string
}

.rankChangeInfo {
	oldRank 0 : integer
	currentRank 1 : integer
	scoreInc 2 : integer
	currentRankScore 3 : integer
}

.cell {
	id 0 : string
	cellType 1 : string
	redouble 2 : integer
	reward 3 : cellReward
}

.smallRankingInfo {
	id 0 : integer
	score 1 : integer
	rank 2 : integer
	name 3 : string
	title 4 : string
}

.onePath {
	path 0 : *string
}

smallactivities_get_self_grid_info 8101 {
	request {
		
	}
	response {
		r 0 : integer
		grid 1 : *cell(id)
	}
}

smallactivities_refresh_grid 8102 {
	request {
		id 0 : string
	}
	response {
		r 0 : integer
		grid 1 : *cell(id)
		items 2 : *item(id)
	}
}

smallactivities_random_valuable_cell 8103 {
	request {
		id 0 : string
	}
	response {
		r 0 : integer
		cell 1 : cell
		items 2 : *item(id)
	}
}

smallactivities_random_redouble_cell 8104 {
	request {
		id 0 : string
	}
	response {
		r 0 : integer
		cell 1 : cell
		items 2 : *item(id)
	}
}

smallactivities_draw_lottery 8105 {
	request {
		pickCellIds 0 : *string
	}
	response {
		r 0 : integer
		grid 1 : *cell(id)
		paths 2 : *onePath
		rewards 3 : *cellReward
		endRewards 4 : *cellReward
		items 5 : *item(id)
		rankChangeInfo 6 : rankChangeInfo
	}
}

smallactivities_get_ranking_list 8106 {
	request {
	
	}
	response {
		r 0 : integer
		rankingInfo 1 : *smallRankingInfo
	}
}

smallactivities_get_self_task_info 8107 {
	request {
	
	}
	response {
		r 0 : integer
		selfTaskInfo 1 : selfTaskInfo
		allStroyStartTime 2 : *integer
	}
}

smallactivities_complete_task 8108 {
	request {
		typ 0 : string
		day 1 : string
		taskId 2 : string
	}
	response {
		r 0 : integer
		selfTaskInfo 1 : selfTaskInfo
		items 2 : *item(id) 
	}
}

smallactivities_get_self_rank_info 8109 {
	request {
	
	}
	response {
		r 0 : integer
		rank 1 : integer
		score 2 : integer
	}
}
smallactivities_check_picked_final 8110 {
	request {
	
	}
	response {
		r 0 : integer
		isPicked 1 : integer
	}
}

smallactivities_shop_buy 8111 {
	request {
		id 0 : string
	}
	response {
		r 0 : integer
		items 1 : *item(id) 
		boughtInfo 2 : *string
	}
}

# 手下部分
# 升级
underling_upgrade_level 2001 {
    request {
        # 手下ID
        id 0 : string
        # 连升10级
        continuous 1 : boolean
    }

    response {
        # 1 需要升级品质
        # 2 现金不足
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        # 升级后的等级
        level 2 : integer
        # 经验
        exp 3 : integer
    }
}

# 升级品质
underling_upgrade_quality 2002 {
    request {
        # 手下ID
        id 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        # 升级后的等级
        level 2 : integer
        # pvp技能
        pvpexp 3 : integer
        pvplevel 4 : integer
    }
}

underling_upgrade_aptitude 2003 {
    request {
        # 手下ID
        id 0 : string
        # 升级方式 1 道具 2 经验
        way 1 : integer
        # 升级哪个资质的id
        aptitudeid 2 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        # 升级后的等级
        level 2 : integer
        # 升级资质所用exp之前的q0
        q0 3 : integer
    }
}

underling_read_book 2004 {
    request {
        # 手下ID
        id 0 : string
        # 书id
        bookid 1 : string
        # 数量
        count 2 : integer
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
        books 2 : *book(type)
        # 属性加成总值, q0 pvpexp
        count 3 : integer
        # 使用增加pvp技能经验书籍时会有本值
        pvplevel 4 : integer
    }
}

underling_upgrade_aura 2005 {
    request {
        # 手下ID
        id 0 : string
    }

    response {
        r 0 : integer
        # 物品数量变化
        items 1 : *item(id)
    }
}